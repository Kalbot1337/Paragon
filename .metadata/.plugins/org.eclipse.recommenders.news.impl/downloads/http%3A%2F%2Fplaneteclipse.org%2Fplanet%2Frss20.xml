<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Donald Raab: As a matter of Factory — Part 1 (Mutable)</title>
	<guid isPermaLink="false">https://medium.com/p/75cc2c5d72d9</guid>
	<link>https://medium.com/@donraab/as-a-matter-of-factory-part-1-mutable-75cc2c5d72d9?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;I’ve read a few blogs, articles and tweets over the past year about an upcoming feature in Java 9. Some of the articles have been titled “Immutable Collections in Java 9”. There will be new factory methods on the Java collections interfaces (List, Set, Map) that will create &lt;strong&gt;“compact, unmodifiable collection instances”&lt;/strong&gt;. This feature is described in JEP 269 — &lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;http://openjdk.java.net/jeps/269&lt;/a&gt;. This feature will be a welcome addition for many Java developers, especially in places like unit tests, where creating small collections can be a frequent and potentially cumbersome activity.&lt;/p&gt;&lt;p&gt;But… we are not getting “contractually” immutable collections in Java 9 and JEP 269 does not claim to provide them. If we were getting “contractually” immutable collections in Java 9, I would expect to see new interfaces named ImmutableCollection, ImmutableSet, ImmutableList and ImmutableMap. Those interfaces could then have the “of” factory methods to produce compile time safe immutable collection instances. ImmutableCollection interfaces should not have methods like add/addAll, remove/removeAll on them because these methods are unsafe and can only throw UnsupportedOperationExceptions.&lt;/p&gt;&lt;p&gt;If you are looking for contractually immutable collections for Java, there are a few open source libraries available today that provide them. &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt; provides both mutable and immutable collections, and has collection factories for both of them. In part 1 of this blog, I will compare the mutable factory methods available in Eclipse Collections with the new factory methods that will be added in Java 9. In part 2, I will explore the factories available for immutable collections.&lt;/p&gt;&lt;p&gt;There have always been static factory methods on all of the mutable container implementations in Eclipse Collections. These methods are still available, so you can write the following to create mutable Lists, Sets and Maps using Eclipse Collections.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;String&amp;gt; list = &lt;br /&gt;    FastList.newListWith(“1”, “2”, “3”);&lt;/pre&gt;&lt;pre&gt;MutableSet&amp;lt;String&amp;gt; set = &lt;br /&gt;    UnifiedSet.newSetWith(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;pre&gt;MutableMap&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    UnifiedMap.&lt;em&gt;newWithKeysValues&lt;/em&gt;(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;For developers new to the library, these methods can be hard to discover because the developer first needs to know the name of the appropriate implementation classes .&lt;/p&gt;&lt;p&gt;When immutable collections were introduced in the library, we had to make a decision how to create them. We wanted a consistent approach for creating both mutable and immutable collections that would follow a consistent convention that would be easy for developers to learn. Our solution was to create &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/docs/guide.md#-creating-mutable-collections&quot;&gt;dedicated collection factory classes&lt;/a&gt;. We decided the convention we would use with our factory classes would be to match the container types we had with corresponding types that ended in “s”. So List(s), Set(s), Map(s), etc. We aim for good &lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;symmetry&lt;/a&gt; here so we can meet developer expectations. Here’s the equivalent code to create mutable collection instances using the factory classes.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.mutable.with(“1”, “2”, “3”);&lt;/pre&gt;&lt;pre&gt;MutableSet&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;pre&gt;MutableMap&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.mutable.with(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;If you want to create empty mutable collections, simply use the empty() method.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.mutable.empty();&lt;/pre&gt;&lt;pre&gt;MutableSet&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.mutable.empty();&lt;/pre&gt;&lt;pre&gt;MutableMap&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.mutable.empty();&lt;/pre&gt;&lt;p&gt;If you would like a more succinct option for creating collections, you can use the &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/impl/factory/Iterables.html&quot;&gt;&lt;strong&gt;Iterables&lt;/strong&gt;&lt;/a&gt; class with static imports. Then you can write the following.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;String&amp;gt; list = &lt;br /&gt;    &lt;em&gt;mList&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;pre&gt;MutableSet&amp;lt;String&amp;gt; set = &lt;br /&gt;    &lt;em&gt;mSet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;,&lt;strong&gt;&quot;2&quot;&lt;/strong&gt;,&lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;pre&gt;MutableMap&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    &lt;em&gt;mMap&lt;/em&gt;(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;“m”&lt;/strong&gt; methods are short for &lt;strong&gt;“mutable”&lt;/strong&gt; and there are also &lt;strong&gt;“i”&lt;/strong&gt; methods which are short for &lt;strong&gt;“immutable”&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;All of the mutable interfaces in Eclipse Collections extend the corresponding mutable interfaces in the JDK. So &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/MutableList.html&quot;&gt;MutableList&lt;/a&gt; is a java.util.List, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/set/MutableSet.html&quot;&gt;MutableSet&lt;/a&gt; is a java.util.Set, etc.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/789/1*053GOPYx3ptu6txdcP93Lw.png&quot; /&gt;Yellow — JDK, Blue — Eclipse Collections&lt;/figure&gt;&lt;p&gt;The mutable factories will return the most specific type (e.g. MutableList), but you can choose to use a more abstract type (e.g. java.util.List).&lt;/p&gt;&lt;pre&gt;List&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(“1”, “2”, “3”);&lt;/pre&gt;&lt;pre&gt;Set&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;pre&gt;Map&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;, 3, &quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;The factory methods being added in Java 9 will look as follows.&lt;/p&gt;&lt;pre&gt;List&amp;lt;String&amp;gt; list = &lt;br /&gt;    List.of(“1”, “2”, “3”);&lt;/pre&gt;&lt;pre&gt;Set&amp;lt;String&amp;gt; set = &lt;br /&gt;    Set.of(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;pre&gt;Map&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Map.of(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;The difference is that the above methods return &lt;strong&gt;unmodifiable&lt;/strong&gt; instances which have mutable interfaces.&lt;/p&gt;&lt;p&gt;If you want to use the java.util.Collection interfaces, and want the instances returned to be unmodifiable like the Java 9 factory methods directly above, you can use asUnmodifiable() method available on all mutable collections in Eclipse Collections.&lt;/p&gt;&lt;pre&gt;List&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(“1”, “2”, “3”).asUnmodifiable();&lt;/pre&gt;&lt;pre&gt;Set&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).asUnmodifiable();&lt;/pre&gt;&lt;pre&gt;Map&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;).asUnmodifiable();&lt;/pre&gt;&lt;p&gt;If you want them to be synchronized, you can use asSynchronized().&lt;/p&gt;&lt;pre&gt;List&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(“1”, “2”, “3”).asSynchronized();&lt;/pre&gt;&lt;pre&gt;Set&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).asSynchronized();&lt;/pre&gt;&lt;pre&gt;Map&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;).asSynchronized();&lt;/pre&gt;&lt;p&gt;The following shows all of the factories for mutable object collections that are available in Eclipse Collections.&lt;/p&gt;&lt;pre&gt;MutableList&amp;lt;T&amp;gt; list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableSet&amp;lt;T&amp;gt; set = Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableSortedSet&amp;lt;T&amp;gt; sortedSet = SortedSets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableMap&amp;lt;K, V&amp;gt; map = Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableSortedMap&amp;lt;K, V&amp;gt; sortedMap = SortedMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableStack&amp;lt;T&amp;gt; stack = Stacks.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableBag&amp;lt;T&amp;gt; bag = Bags.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableSortedBag&amp;lt;T&amp;gt; sortedBag = SortedBags.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableBiMap&amp;lt;K, V&amp;gt; biMap = BiMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;MutableListMultimap&amp;lt;K, V&amp;gt; multimap = Multimaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.list.empty();&lt;br /&gt;MutableSetMultimap&amp;lt;K, V&amp;gt; multimap = Multimaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.set.empty();&lt;br /&gt;MutableBagMultimap&amp;lt;K, V&amp;gt; multimap = Multimaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.bag.empty();&lt;/pre&gt;&lt;p&gt;Eclipse Collections also supports containers for all eight of the Java primitive types as well. In order to provide good symmetry with their object counterparts, there are &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/docs/guide.md#-creating-primitive-collections&quot;&gt;factory classes for all of the mutable primitive container types&lt;/a&gt; as well.&lt;/p&gt;&lt;pre&gt;MutableIntList list = &lt;br /&gt;    IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableIntSet set = &lt;br /&gt;    IntSets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableIntBag bag = &lt;br /&gt;    IntBags.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableIntStack stack = &lt;br /&gt;    IntStacks.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;pre&gt;// supports all combinations for all 8 primitives&lt;br /&gt;MutableIntIntMap map = &lt;br /&gt;    IntIntMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();  &lt;br /&gt;MutableIntObjectMap&amp;lt;V&amp;gt; map = &lt;br /&gt;    IntObjectMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;MutableObjectIntMap&amp;lt;K&amp;gt; map = &lt;br /&gt;    ObjectIntMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;/pre&gt;&lt;p&gt;There are factories for all primitive types for all container types. The mutable primitive containers also have unmodifiable and synchronized versions as well, to provide good symmetry with their object counterparts.&lt;/p&gt;&lt;pre&gt;MutableIntList list = &lt;br /&gt;    IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3).asUnmodifiable();&lt;/pre&gt;&lt;pre&gt;MutableIntList list = &lt;br /&gt;    IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3).asSynchronized();&lt;/pre&gt;&lt;p&gt;The collection factories in Eclipse Collections work with all versions of Java all the way back to version 5. If you want to use the collection factories with Java versions prior to Java 8, you will need to use Eclipse Collections 7.x. Eclipse Collections 8.x is only compatible with Java 8+. Both Eclipse Collections 7.x and 8.x work with Java 8.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;With of &lt;/strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;strong&gt; of with&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;All of the examples that I have shown so far that use “&lt;strong&gt;with&lt;/strong&gt;”, can also be written using “&lt;strong&gt;of&lt;/strong&gt;” as well. In a naming battle between “with” and “of”, there were two winners. So you can write the following if you prefer of instead of with. FWIW, the “with” approach is more consistent with Smalltalk style.&lt;/p&gt;&lt;pre&gt;List&amp;lt;String&amp;gt; list = &lt;br /&gt;    Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.of(“1”, “2”, “3”);&lt;/pre&gt;&lt;pre&gt;Set&amp;lt;String&amp;gt; set = &lt;br /&gt;    Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.of(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;pre&gt;Map&amp;lt;Integer, String&amp;gt; map = &lt;br /&gt;    Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.of(1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;, 3, &quot;3&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;p&gt;I think this is a good place to stop for now. In part 2 of this blog series, I will give an overview of the immutable factories that are available for Eclipse Collections.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=75cc2c5d72d9&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 18 Aug 2017 20:35:20 +0000</pubDate>
</item>
<item>
	<title>Kichwa Coders: Be a 10X Developer! Write Parameterized Tests</title>
	<guid isPermaLink="false">http://kichwacoders.com/?p=2010</guid>
	<link>https://kichwacoders.com/2017/08/18/be-a-10x-developer-write-parameterized-tests/</link>
	<description>&lt;p&gt;Following on from &lt;a href=&quot;https://kichwacoders.com/2017/06/08/untested-code-is-like-schrodingers-cat-dead-or-alive/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Yannick’s previous pos&lt;/a&gt;t about the necessity of thorough testing we wanted to look at the subject from an alternative angle. Within the confines of Junit’s Parameterized Test it is possible to test multiple classes simultaneously – thus saving  time and effort – but as with every labour-saving device, the devil is in the detail at the front end of the task – how to create a test we can rely on that will also reduce our ongoing test maintenance burden? Kichwa Coders’ intern Pierre Sachot grapples with this problem in his latest blog detailing how he set about creating a Parameterized Test within the Eclipse January Project. Find out how he got on and let us know what you think in the comments below.&lt;/p&gt;
&lt;h2&gt;Context:&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;color: #000000;&quot;&gt;I was back on the January Eclipse project, more specifically on JUnit Tests. We needed to test two functions of the Maths.java: arctan2() function and abs() in order to calculate the absolute value of a Dataset. I worked more on the second function, and as those two functions were really similar we decided to create a Parameterized Test class to include the first function too. This is a test that could be applied to both series of code, with only variable changing. It can therefore be used to test a function with a lot of values to find the one which is failing, or in our case, on several class types.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://github.com/PierreSachot/Internship-Reports/blob/master/Pierre%20Sachot%20-%20week%206.md#tests-before-using-parameterized-tests&quot; id=&quot;user-content-tests-before-using-parameterized-tests&quot;&gt;&lt;/a&gt;Tests before using Parameterized Tests:&lt;/h2&gt;
&lt;p&gt;&lt;span id=&quot;more-2010&quot;&gt;&lt;/span&gt;Our tests were really similar:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;@Test
public void testAbsDoubleInput() {
  double[] obj = new double[] { 4.2, -2.9, 6.1 };
  Dataset a = DatasetFactory.createFromObject(obj);

  int size = a.getSize();
  double[] c = new double[size];
  for (int i = 0; i &amp;lt; size; i++) {
    double abs = Math.abs(obj[i]);
    c[i] = abs;
  }
  Dataset expectedResult = DatasetFactory.createFromObject(c);

  Dataset actualResult = Maths.abs(a);
  TestUtils.assertDatasetEquals(expectedResult, actualResult, true, ABSERRD, ABSERRD);
}

@Test
public void testAbsbyteInput() {
  Dataset a = DatasetFactory.createFromObject(new byte[] { -4, 8, 6 });

  int size = a.getSize();
  byte[] c = new byte[size];
  for (int i = 0; i &amp;lt; size; i++) {
    int abs = Math.abs(a.getByte(i));
    c[i] = (byte) abs;
  }
  Dataset expectedResult = DatasetFactory.createFromObject(c);

  Dataset actualResult = Maths.abs(a);
  TestUtils.assertDatasetEquals(expectedResult, actualResult, true, ABSERRD, ABSERRD);
}
&lt;/pre&gt;
&lt;p&gt;Here I have shown examples of two of the classes, but we did in fact use it for six. So now we needed to identify what was similar and what was different in all the tests, and what could be changed to make them more similar.&lt;/p&gt;
&lt;p&gt;Here the actualResult needed to be in the result type we wanted, because that is what we needed to test, but the expected result type could be written which ever way we wanted it:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;public void testAbsDoubleInput() {
  double[] obj = new double[] { 4.2, -2.9, 6.1 };
  Dataset a = DatasetFactory.createFromObject(DoubleDataset.class, obj);

  int size = a.getSize();
  double[] c = new double[size];
  for (int i = 0; i &amp;lt; size; i++) {
    double abs = Math.abs(obj[i]);
    c[i] = abs;
  }
  Dataset expectedResult = DatasetFactory.createFromObject(DoubleDataset.class, c);

  Dataset actualResult = Maths.abs(a);
  TestUtils.assertDatasetEquals(expectedResult, actualResult, true, ABSERRD, ABSERRD);
}

@Test
public void testAbsbyteInput() {
  double[] obj = new double[] { 4.2, -2.9, 6.1 };
  Dataset a = DatasetFactory.createFromObject(ByteDataset.class, obj);

  int size = a.getSize();
  double[] c = new double[size];
  for (int i = 0; i &amp;lt; size; i++) {
    double abs = Math.abs(obj[i]);
    c[i] = abs;
  }
  Dataset expectedResult = DatasetFactory.createFromObject(ByteDataset.class, c);

  Dataset actualResult = Maths.abs(a);
  TestUtils.assertDatasetEquals(expectedResult, actualResult, true, ABSERRD, ABSERRD);
}
&lt;/pre&gt;
&lt;p&gt;Here in the Dataset constructor you can see that we&lt;span style=&quot;color: #000000;&quot;&gt; created &lt;/span&gt;a ByteDataset from a double array. This was possible because Dataset class allows the user to do this. Now it was possible to see that the only thing that would need to be changed in our tests was the class variable in order to create the Dataset.&lt;/p&gt;
&lt;p&gt;We wrote a variable to take the class type like this:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;@Test
public void testAbsbyteInput() {
  Class&amp;lt;? extends Dataset&amp;gt; class1 = ByteDataset.class;
  double[] obj = new double[] {4.2, -2.9, 6.10};
  Dataset input = DatasetFactory.createFromObject(class1, obj);
  ...
}
&lt;/pre&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://github.com/PierreSachot/Internship-Reports/blob/master/Pierre%20Sachot%20-%20week%206.md#tests-using-parameterized-tests&quot; id=&quot;user-content-tests-using-parameterized-tests&quot;&gt;&lt;/a&gt;Tests using Parameterized Tests:&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;color: #000000;&quot;&gt;So once you&lt;/span&gt; can write a parameterize class test you can reduce your code size and simplify your tests:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;package org.eclipse.january.dataset;

import org.junit.Test;
import org.eclipse.january.asserts.TestUtils;

import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;
import org.junit.runner.RunWith;

import java.util.Arrays;
import java.util.Collection;

@RunWith(Parameterized.class)
public class MathsBasicTypeAbsFunctionParameterizeTest {

  @Parameters(name = &quot;{index}: {0}&quot;) //the &quot;(name = &quot;{index}: {0}&quot;)&quot; allows the Junit test to write which test failed with which parameter
  public static Collection&amp;lt;Object&amp;gt; data() { //called to get the array of variables that need to be change
    return Arrays.asList(
      new Object[] {
        FloatDataset.class,
        DoubleDataset.class,
        ByteDataset.class,
        ShortDataset.class,
        IntegerDataset.class,
        LongDataset.class
      });
  }

  @Parameter
  public Class&amp;lt;? extends Dataset&amp;gt; classType; //Parameter which change when the last test is done.

  //parameter specific to our test don't worry about this one
  private final static double ABSERRD = 1e-8;

  @Test
  public void test() {
    Class&amp;lt;? extends Dataset&amp;gt; class1 = classType;
    double[] obj = new double[] {4.2, -2.9, 6.10};
    Dataset input = DatasetFactory.createFromObject(class1, obj);
    Dataset output = DatasetFactory.createFromObject(class1, new double[]{0,0,0});

    int size = input.getSize();
    double[] c = new double[size];
    for (int i = 0; i &amp;lt; size; i++) {
      double abs = Math.abs(obj[i]);
      c[i] = abs;
    }
    Dataset expectedResult = DatasetFactory.createFromObject(class1, c);

    Dataset actualResult = Maths.abs(input, output);
    TestUtils.assertDatasetEquals(expectedResult, actualResult, true, ABSERRD, ABSERRD);
  }
}
&lt;/pre&gt;
&lt;p&gt;Here the function data() is the one which will be called to change the data type. Now we had  a parameterized test which would work with every class which extended Dataset.&lt;/p&gt;
&lt;h2&gt;Conclusion:&lt;/h2&gt;
&lt;p&gt;Once you know how to reduce your tests code and can identify things which are the same between tests, it becomes possible to code tests efficiently, winning back time and avoiding code duplication.  This is why Parameterized Tests are essential for every true and wannabe 10X Developer.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kichwacoders.wordpress.com/2010/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kichwacoders.wordpress.com/2010/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kichwacoders.com&amp;amp;blog=68353182&amp;amp;post=2010&amp;amp;subd=kichwacoders&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 18 Aug 2017 18:06:35 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Launching Eclipse IoT Newsletter</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/Qta9G2MTiW8/cYn4-n</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/Qta9G2MTiW8/cYn4-n</link>
	<description>We're lauching a quarterly Eclipse IoT Newsletter. Subscribe to receive the first issue this September.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/Qta9G2MTiW8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 18 Aug 2017 09:40:00 +0000</pubDate>
</item>
<item>
	<title>Jens von Pilgrim: Two new Eclipse projects: Xpect and Xsemantics</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-8131930997650771659</guid>
	<link>http://jevopisdeveloperblog.blogspot.com/2017/08/two-new-eclipse-projects-xpect-and.html</link>
	<description>Yesterday, two new Eclipse projects had been created:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/xpect&quot;&gt;Eclipse Xpect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/xsemantics&quot;&gt;Eclipse Xsemantics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Both project are around for quite some time and they both are based on &lt;a href=&quot;https://www.eclipse.org/Xtext/&quot;&gt;Eclipse Xtext&lt;/a&gt;, the famous framework to create editors with all state-of-the-art features (parser, linker, validators, content assist, etc.) for your own textual DSLs, simply based on a grammar.
&lt;p&gt;
Xpect is &lt;a href=&quot;https://github.com/meysholdt/Xpect&quot;&gt;written by Moritz Eysholdt&lt;/a&gt;, who is also a committer of Xtext. It is a unit- and integration-testing framework to be used for Xtext-based languages. Instead of writing fiddly JUnit tests, you can simply write things like
&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// XPECT errors --&amp;gt; &quot;cannot divide two strings&quot;
&quot;hello&quot; / &quot;world&quot;&lt;/code&gt;&lt;/pre&gt;
assuming your language supports division, strings, and types.

&lt;p&gt;
And types is the topic of Xsemantics, &lt;a href=&quot;http://xsemantics.sourceforge.net/&quot;&gt;written by Lorenzo Bettini&lt;/a&gt;, author of the book &lt;a href=&quot;http://www.packtpub.com/implementing-domain-specific-languages-with-xtext-and-xtend/book&quot;&gt;&quot;Implementing DSLs with Xtext and Xtend&quot;&lt;/a&gt;. It is a DSL (implemented in Xtext itself) for writing type systems, reduction rules, interpreters and general relation rules for languages implemented in Xtext. So you can write rules like that:
&lt;/p&gt;&lt;pre&gt;&lt;code&gt;rule subtypeUnion_Left
 G|- UnionTypeExpression U &amp;lt;: TypeRef S
from {
 U.typeRefs.forall[T| G |- T &amp;lt;: S]
}&lt;/code&gt;&lt;/pre&gt;
Well, you probably need to know type theory a little bit to see the beauty in that.
&lt;p&gt;
Both of these frameworks are heavily used by &lt;a href=&quot;https://www.eclipse.org/n4js/&quot;&gt;Eclipse N4JS&lt;/a&gt;: it contains more than 10.000 Xpect tests (e.g., &lt;a href=&quot;https://github.com/eclipse/n4js/tree/master/tests/org.eclipse.n4js.spec.tests/xpect-tests&quot;&gt;all specification tests&lt;/a&gt;) and a &lt;a href=&quot;https://github.com/eclipse/n4js/blob/master/plugins/org.eclipse.n4js/src/org/eclipse/n4js/typesystem/n4js.xsemantics&quot;&gt;Java 8 like type system&lt;/a&gt; defined in Xsemantics, and this is also why I act as kind of &quot;assisting project lead&quot; to help the original authors to bring these great tools to Eclipse. The authors and the N4JS team at &lt;a href=&quot;http://enfore.com&quot;&gt;enfore&lt;/a&gt; are now working on bringing the code to Eclipse as soon as possible, to simplify the usage of these frameworks for all Xtext users!
&lt;/p&gt;&lt;p&gt;
Keep on modelling!
&lt;/p&gt;&lt;p&gt;
I &lt;a href=&quot;http://ed-merks.blogspot.de/2010/11/modeling-in-europe.html&quot;&gt;once said&lt;/a&gt; that modelling without graphical editors is like Tour de France without mountains. Well, I have to correct myself: a great test suite and a complicated type system are just as exciting ;-)&lt;/p&gt;</description>
	<pubDate>Fri, 18 Aug 2017 06:59:55 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>Eclipse Announcements: Eclipse IoT Day @ ThingMonk</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/zD3xjV2vrs4/eclipse-day-talks.html</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/zD3xjV2vrs4/eclipse-day-talks.html</link>
	<description>Register for the Eclipse IoT Day co-located with ThingMonk on September 11 in London, UK.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/zD3xjV2vrs4&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 17 Aug 2017 12:55:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: EclipseCon Europe 2017, Modeling Symposium</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=35268</guid>
	<link>https://eclipsesource.com/blogs/2017/08/17/eclipsecon-europe-2017-modeling-symposium/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ed, Philip and I are organizing the Modeling Symposium for the EclipseCon Europe 2017 in Ludwigsburg. It is scheduled for the second day of the conference, i.e., Wednesday, October 25th, 2017. The symposium aims to provide a forum for community members to present a brief overview of their work. We offer 10 minute lightning slots (including questions) to facilitate a broad range of speakers. The primary goal is to introduce interesting, new technological features. This targets mainly modeling projects which are otherwise not represented at the conference.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you are interested in giving a talk, please send a short description (a few sentences) to munich@eclipsesource.com. Depending on the number, we might have to select among the submissions. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Deadline for submisson: Friday, September 8th, 2017&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Please adhere to the following guidelines:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Please provide sufficient context. Talks should start with a concise overview of what the presenter plans to demonstrate, or what a certain framework offers.  Even more important, explain how and why this is relevant.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Do not bore us! Get to the point quickly.  You do not have to use all your allocation. An interesting 3 minute talk will have a bigger impact than a boring 10 minute talk. We encourage you to plan for a 5 minute talk, leaving room for 5 minutes of discussion.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Keep it short and sweet, focus on the most important aspects. A conference offers the major advantage of getting in contact with people who are interested in your work. So consider the talk more as a teaser to prompt follow-up conversations than a forum to demonstrate or discuss technical details in depth.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A demo is worth a thousand slides. We prefer to see how your stuff works rather than be told about how it works with illustrative slides.  Please restrict the slides to  summarize your introduction or conclusion.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Looking forward to your submissions!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Jonas&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 17 Aug 2017 10:35:58 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Presentation: The Java Evolution of Eclipse Collections</title>
	<guid isPermaLink="true">http://www.infoq.com/presentations/java-eclipse-collections?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/presentations/java-eclipse-collections?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;http://www.infoq.com/resource/presentations/java-eclipse-collections/en/mediumimage/Kribig.JPG&quot; /&gt;&lt;p&gt;Kristen O'Leary talks about some of the newest features from the 8.0.0 release including the use of Java 8 features such as Collectors, Optional and SummaryStatistics. These new interactions allow developers to have a more seamless experience coding using both Eclipse Collections and Java. She also discusses some of the upcoming changes to the framework to better prepare for Java 9.&lt;/p&gt; &lt;i&gt;By Kristen O'Leary&lt;/i&gt;</description>
	<pubDate>Wed, 16 Aug 2017 01:26:00 +0000</pubDate>
</item>
<item>
	<title>Fabio Zadrozny: LiClipse 4.1.1 / LiClipseText 2.0.0</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7855001383687474475.post-3252399798579216324</guid>
	<link>http://liclipse.blogspot.com/2017/08/liclipse-411-liclipsetext-200.html</link>
	<description>Ok, the new versions of &lt;b&gt;LiClipse (4.1.1) &lt;/b&gt;and &lt;b&gt;LiClipseText (2.0.0)&lt;/b&gt; are now out.&lt;br /&gt;&lt;br /&gt;This version had many changes, the major one being that &lt;b&gt;LiClipseText&lt;/b&gt; now reuses the same engine that tm4e uses for parsing code when based on a &lt;b&gt;TextMate &lt;/b&gt;grammar (which is is a translation from the same engine used in VSCode), so, hopefully this should iron out most issues when dealing with &lt;b&gt;TextMate &lt;/b&gt;grammars.&lt;br /&gt;&lt;br /&gt;Also, it can now parse in a &lt;b&gt;thread &lt;/b&gt;to prevent the UI from becoming unresponsive (although it'll only really do that if there are too many changes for it to parse).&lt;br /&gt;&lt;br /&gt;There were also improvements in the definition being used for JavaScript, so, parsing should be *&lt;b&gt;much&lt;/b&gt;* faster (although this was done at the expense of not showing some entries in the outline) -- but as on JavaScript having huge files isn't uncommon, the big performance gain, should be worth it.&lt;br /&gt;&lt;br /&gt;Aside from that, the standalone is now based on &lt;b&gt;Eclipse 4.7&lt;/b&gt; (final) and &lt;b&gt;PyDev &lt;/b&gt;was also updated for &lt;b&gt;5.9.2&lt;/b&gt;, which brought enhancements such as the new debugging approach using bytecode modification with the new &lt;b&gt;Python 3.6&lt;/b&gt; hooks and isort integration, besides a &lt;b&gt;critical fix to the Lucene integration&lt;/b&gt;, which affected users which used a different plugin which also used Lucene but on a different version.&lt;br /&gt;&lt;br /&gt;So, if you're a LiClipse user, hurry to &lt;a href=&quot;http://www.liclipse.com/download.html&quot;&gt;http://www.liclipse.com/download.html&lt;/a&gt; to get the new version!</description>
	<pubDate>Tue, 15 Aug 2017 19:05:57 +0000</pubDate>
	<author>noreply@blogger.com (Fabio Zadrozny)</author>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools and Red Hat Developer Studio for Eclipse Oxygen</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/11.0.0.ga-for-oxygen.0.html</guid>
	<link>https://tools.jboss.org/blog/11.0.0.ga-for-oxygen.0.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.0.Final.html&quot;&gt;JBoss Tools 4.5&lt;/a&gt; and &lt;a href=&quot;https://tools.jboss.org/downloads/devstudio/oxygen/11.0.0.GA.html&quot;&gt;Red Hat JBoss Developer Studio 11.0&lt;/a&gt; for Eclipse Oxygen are here waiting for you. Check it out!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devstudio11&quot; src=&quot;https://tools.jboss.org/blog/images/devstudio11.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Developer Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href=&quot;https://www.jboss.org/products/devstudio.html&quot;&gt;JBoss Products page&lt;/a&gt; and run it like this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;java -jar jboss-devstudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) JBoss Developer Studio require a bit more:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release requires at least Eclipse 4.7 (Oxygen) but we recommend
      using the latest &lt;a href=&quot;http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/oxygenr&quot;&gt;Eclipse 4.7 Oxygen JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &quot;JBoss Tools&quot; or &quot;Red Hat JBoss Developer Studio&quot;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;http://download.jboss.org/jbosstools/oxygen/stable/updates/&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is new?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our main focus for this release was on adoption of Eclipse Oxygen, improvements for container based development and bug fixing.
      Eclipse Oxygen itself has &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaTM66CahSlkMh5YkndYXMUq&quot;&gt;a lot of new cool stuff&lt;/a&gt; but let me highlight just a few updates in both Eclipse Oxygen and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-3&quot;&gt;&lt;/a&gt;OpenShift 3&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;oc-client-selection-per-connection&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#oc-client-selection-per-connection&quot;&gt;&lt;/a&gt;oc client selection per connection&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Some operations (logs, file synchronization) require the user of the oc CLI client. It was possible to specific a single
      instance of the used oc CLI tool for the whole workspace. This may cause some trouble when working simultaneously with several
      OpenShift clusters (that may have different version levels).
      It is now possible to specify the oc CLI tool on the connection level. This is optional, and the default is to use the oc CLI tool
      specified at the workspace level.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The connection specific oc CLI tool is accessible through the OpenShift connection edit dialog with the &lt;code&gt;Advanced&lt;/code&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;connection wizard override oc1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/connection-wizard-override-oc1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enable the &lt;strong&gt;Override &amp;amp;aposoc&amp;amp;apos location&amp;amp;apos flag and select a specific oc CLI tool for this connection through the *Browse&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;connection wizard override oc2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/connection-wizard-override-oc2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;OpenShift connections created by the CDK server adapter will automatically have a specific oc CLI tool set as the CDK
      installs locally an oc CLI tool that is aligned with the embedded OpenShift version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;connection wizard override oc3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/connection-wizard-override-oc3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-server-and-kubernetes-server-versions-displayed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-server-and-kubernetes-server-versions-displayed&quot;&gt;&lt;/a&gt;OpenShift server and Kubernetes server versions displayed&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The OpenShift server and Kubernetes server versions are now displayed in the OpenShift connection properties.
      This information is retrieved using an un-authenticated request login to the OpenShift cluster is not required.
      This allow user to verify the OpenShift and Kubernetes level when interacting.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Here is an example based on an OpenShift connection against CDK3:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;openshift k8s versions&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/openshift-k8s-versions.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;if the cluster is not started or accessible, then no values are displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;openshift k8s versions1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/openshift-k8s-versions1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;docker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#docker&quot;&gt;&lt;/a&gt;Docker&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-security-options&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#new-security-options&quot;&gt;&lt;/a&gt;New Security Options&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Support has been added when launching commands in a Container to specify a security option profile. This can be done in lieu of specifying privileged mode. For example, to run gdbserver, one can specify &quot;seccomp:unprofiled&quot; to allow ptrace commands to be run by the gdb server.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Run Image Wizard has been modified to allow specifying an unconfined seccomp profile to replace the default seccomp profile.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;LinuxToolsUnconfinedOption&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/docker/images/docker_oxygen0/LinuxToolsUnconfinedOption.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Security options are also now shown in the Properties View.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;LinuxToolsUnconfinedProperty&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/docker/images/docker_oxygen0/LinuxToolsUnconfinedProperty.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;docker-tooling-jdt-integration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#docker-tooling-jdt-integration&quot;&gt;&lt;/a&gt;Docker Tooling JDT Integration&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Eclipse Docker Tooling Feature now contains a plugin that integrates with the Java Development Tools (JDT). This permits the running and debugging of Eclipse Java projects within containers. The functionality is provided through the context menu under the &amp;amp;aposRun As&amp;amp;apos and &amp;amp;aposDebug As&amp;amp;apos options. The daemon connection used, as well as the image chosen are configurable through launch configurations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img alt=&quot;Docker-tooling-jdt-debug-menu&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/docker/images/docker_oxygen0/Docker-tooling-jdt-debug-menu.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is intended to work in the same way that a regular run/debug session works.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img alt=&quot;Docker-tooling-jdt-debug&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/docker/images/docker_oxygen0/Docker-tooling-jdt-debug.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;docker-client-upgrade&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#docker-client-upgrade&quot;&gt;&lt;/a&gt;Docker Client Upgrade&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The version of docker-client used by the Docker Tooling plug-ins has been upgraded to 6.1.1 for the 3.0.0 release of the Docker Tooling feature.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eap-7-1-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#eap-7-1-server-adapter&quot;&gt;&lt;/a&gt;EAP 7.1 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with EAP 7.1. It’s currently released in Tech-Preview mode only, since the underlying WildFly 11 continues to be under active development with substantial opportunity for breaking changes. This new server adapter includes support for incremental management deployment like it’s upstream WildFly 11 counterpart.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;removal-of-event-log-and-other-deprecated-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#removal-of-event-log-and-other-deprecated-code&quot;&gt;&lt;/a&gt;Removal of Event Log and other Deprecated Code&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Event Log view has been removed. The standard eclipse log is to be used for errors and other important messages regarding errors during server state transitions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;bean-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#bean-support&quot;&gt;&lt;/a&gt;Bean Support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to finally announce support for &lt;strong&gt;Beans&lt;/strong&gt; (Spring / Blueprint).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Using the Route Editor you can now access Spring / Blueprint Beans in your Camel Context through the &lt;strong&gt;Configurations&lt;/strong&gt; tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Configurations tab in Editor&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/beansupporteditortab.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;strong&gt;Configurations&lt;/strong&gt; tab you can see all global configuration elements of your Camel Context. You can &lt;code&gt;Add&lt;/code&gt;, &lt;code&gt;Edit&lt;/code&gt; and &lt;code&gt;Delete&lt;/code&gt; elements using the buttons on the right side.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Configurations tab content&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/beancreated.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By clicking the &lt;code&gt;Add&lt;/code&gt; or &lt;code&gt;Edit&lt;/code&gt; button a wizard will be openend to guide you on the creation of the Bean.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Bean wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newbeanwizard.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the wizard you can select an existing bean class from your project or create a new bean class. You can also specify constructor arguments and bean properties.
      Once created you can then modify the properties of that Bean inside the &lt;code&gt;Properties&lt;/code&gt; view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;alt&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/beanproperties.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-search-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hibernate-search-support&quot;&gt;&lt;/a&gt;Hibernate Search Support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are glad to announce the support of the &lt;a href=&quot;http://hibernate.org/search&quot;&gt;Hibernate Search&lt;/a&gt;. The project was started by &lt;a href=&quot;https://github.com/bdshadow&quot;&gt;Dmitrii Bocharov&lt;/a&gt; in the &lt;a href=&quot;https://developers.google.com/open-source/gsoc/&quot;&gt;Google Summer Code&lt;/a&gt; program and has been successfully transferred in the current release of the JBoss Tools from &lt;a href=&quot;https://github.com/bdshadow/jbosstools-hibernate-search&quot;&gt;Dmitrii’s repository&lt;/a&gt; into the &lt;a href=&quot;https://github.com/jbosstools/jbosstools-hibernate&quot;&gt;jbosstools-hibernate repository&lt;/a&gt; and has become a part of the JBoss family of tools.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;functionality&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#functionality&quot;&gt;&lt;/a&gt;Functionality&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The plugin was thought to be some kind of a &lt;a href=&quot;https://github.com/DmitryKey/luke&quot;&gt;Luke tool&lt;/a&gt; inside Eclipse.
      It was thought to be more convenient than launching a separate application, and picks up the configuration directly from your Hibernate configuration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Two options were added to the console configurations submenu: Index Rebuild and Index Toolkit. They become available when you use hibernate search libraries (they exist in the build path of your application, e.g. via maven).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Configuration menu items&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/jbt-hsearch-ConfigurationMenu.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;index-rebuild&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#index-rebuild&quot;&gt;&lt;/a&gt;Index Rebuild&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When introducing Hibernate Search in an existing application, you have to create an initial Lucene index for the data already present in your database.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The option &quot;Index Rebuild&quot; will do so by re-creating the Lucene index in the directory specified by the &lt;code&gt;hibernate.search.default.indexBase&lt;/code&gt; property.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Hibernate Search indexed entities&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/markedIndexed.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Hibernate Search configuration properties&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/GeneratedIndexes.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;index-toolkit&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#index-toolkit&quot;&gt;&lt;/a&gt;Index Toolkit&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&quot;Open Index Toolkit&quot; submenu of the console configuration opens an &quot;Index Toolkit&quot; view, which has three tabs: Analyzers, Explore Documents, Search.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;analyzers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#analyzers&quot;&gt;&lt;/a&gt;Analyzers&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This tab allows you to view the result of work of different Lucene Analyzers.
      The combo-box contains all classes in the workspace which extend org.apache.lucene.analysis.Analyzer, including custom implementations created by the user. While you type the text you want to analyse, the result immediately appears on the right.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Analyzers&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/jbt-hsearch-AnalyzersToolkit.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;explore-documents&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#explore-documents&quot;&gt;&lt;/a&gt;Explore Documents&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After creating the initial index you can now inspect the Lucene Documents it contains.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All entities annotated as &lt;code&gt;@Indexed&lt;/code&gt; are displayed in the Lucene Documents tab.
      Tick the checkboxes as needed and load the documents. Iterate through the documents using arrows.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Lucene Documents inspection&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/jbt-hsearch-LuceneDocuments.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;searching&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#searching&quot;&gt;&lt;/a&gt;Searching&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The plugin passes the input string from the search text box to the QueryParser which parses it using the specified analyzer and creates a set of search terms, one term per token, over the specified default field. The result of the search pulls back all documents which contain the terms and lists them in a table below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Search tab&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.0.AM1/jbt-hsearch-LuceneSearch.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;demo&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#demo&quot;&gt;&lt;/a&gt;Demo&lt;/h5&gt;
      &lt;div class=&quot;videoblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.1 runtime provider now incorporates Hibernate Core version 5.1.8.Final and Hibernate Tools version 5.1.5.Final.
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.10.Final and Hibernate Tools version 5.2.5.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#forge&quot;&gt;&lt;/a&gt;Forge&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-7-2-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-7-2-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.7.2.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.7.2.Final. Read the official announcement &lt;a href=&quot;http://forge.jboss.org/news/jboss-forge-3.7.2.final-is-here&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;freemarker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#freemarker&quot;&gt;&lt;/a&gt;Freemarker&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;freemarker-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#freemarker-component-deprecation&quot;&gt;&lt;/a&gt;Freemarker component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Freemarker component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;seam&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#seam&quot;&gt;&lt;/a&gt;Seam&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;seam-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#seam-component-deprecation&quot;&gt;&lt;/a&gt;Seam component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Seam component has been marked deprecated as the Seam project has been stopped. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;gradle&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#gradle&quot;&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Maven integration has been a long time first class citizen in Red Hat JBoss Developer Studio. Gradle is now having the same level.
      You can now manage Gradle projects in the base Red Hat JBoss Developer Studio installation.
      For more information, please see &lt;a href=&quot;https://projects.eclipse.org/projects/tools.buildship&quot;&gt;Buildship documentation&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;platform&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#platform&quot;&gt;&lt;/a&gt;Platform&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;always-run-in-background-enabled-by-default&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#always-run-in-background-enabled-by-default&quot;&gt;&lt;/a&gt;&quot;Always run in background&quot; enabled by default&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Always run in background&lt;/strong&gt; preference is now enabled by default. If you prefer to see a progress dialog for long-running operations, you can disable this option
      on the &lt;strong&gt;General&lt;/strong&gt; preference page.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-default-styling-for-the-toolbar&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-default-styling-for-the-toolbar&quot;&gt;&lt;/a&gt;Improved default styling for the toolbar&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The styling of the window toolbar has been improved. On Windows, the toolbar color is now consistent with the color of the perspective switcher.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;css styles windows toolbar&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7/M1/images/css-styles-windows-toolbar.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-default-styling-for-form-based-user-interfaces&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#new-default-styling-for-form-based-user-interfaces&quot;&gt;&lt;/a&gt;New default styling for form-based user interfaces&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The default styling for form-based user interfaces was changed to use a flat, gray style. This change was inspired by the popular &quot;Clean Sheet&quot; plug-in. Below you see screenshots of the MANIFEST.MF editor and the Git Staging view in this new design.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;forms grey styling2&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7/M1/images/forms-grey-styling2.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;images-are-opened-in-the-eclipse-ide&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#images-are-opened-in-the-eclipse-ide&quot;&gt;&lt;/a&gt;Images are opened in the Eclipse IDE&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Image files are now opened directly in Eclipse by default. The Internal Web Browser has been registered as default editor for files with the png, jpg, jpeg, gif, bmp, and ico extensions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;image opened in eclipse&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/image-opened-in-eclipse.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Use &lt;strong&gt;Open With &amp;gt; System Editor&lt;/strong&gt; to open files in the default external program.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;installation-details-menu-entry-removed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#installation-details-menu-entry-removed&quot;&gt;&lt;/a&gt;Installation Details menu entry removed&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Help &amp;gt; Installation Details&lt;/strong&gt; menu entry has been removed. You can access this dialog via &lt;strong&gt;Help &amp;gt; About &amp;gt; Installation Details&lt;/strong&gt; or via &lt;strong&gt;Quick Access (Ctrl+3)&lt;/strong&gt;
      and then typing &quot;Installation Details&quot;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;maximize-and-minimize-via-window-appearance-menu&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#maximize-and-minimize-via-window-appearance-menu&quot;&gt;&lt;/a&gt;Maximize and Minimize via Window &amp;gt; Appearance menu&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Maximize&lt;/strong&gt; and &lt;strong&gt;Minimize Active View or Editor&lt;/strong&gt; menu items have been moved to the &lt;strong&gt;Window &amp;gt; Appearance&lt;/strong&gt; menu. They used to be in the &lt;strong&gt;Window &amp;gt; Navigate&lt;/strong&gt; menu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;terminate-and-relaunch-from-run-menu-context-menu-and-tool-bar&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#terminate-and-relaunch-from-run-menu-context-menu-and-tool-bar&quot;&gt;&lt;/a&gt;&quot;Terminate and Relaunch&quot; from Run menu, context menu and tool bar&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A &lt;strong&gt;Terminate and Relaunch&lt;/strong&gt; option is now available while launching from &lt;strong&gt;Run&lt;/strong&gt; menu, context menu and tool bar. The default setting is to launch without terminating previous
      launches. To enable automatic termination, select the option &lt;strong&gt;Terminate and Relaunch&lt;/strong&gt; while launching on &lt;strong&gt;Preferences &amp;gt; Run/Debug &amp;gt; Launching&lt;/strong&gt;.
      The behavior not selected on the preference page can also be activated on-demand by holding the &lt;strong&gt;Shift&lt;/strong&gt; key while launching the configuration from history.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;launch preference terminate relaunch&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/launch-preference-terminate-relaunch.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;breakpoints-in-overview-ruler&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#breakpoints-in-overview-ruler&quot;&gt;&lt;/a&gt;Breakpoints in Overview Ruler&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Breakpoints&lt;/strong&gt; are now visible in the &lt;strong&gt;Overview Ruler&lt;/strong&gt; by default.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;breakpoint overview ruler&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/breakpoint-overview-ruler.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To configure the rendering of annotations, right-click the overview ruler and choose &lt;strong&gt;Preferences…​.&lt;/strong&gt; This directly opens the preference page
      &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors &amp;gt; Annotations&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;configure-left-and-right-sides-in-compare-editors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#configure-left-and-right-sides-in-compare-editors&quot;&gt;&lt;/a&gt;Configure left and right sides in Compare editors&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Compare&lt;/strong&gt; editors now offer a button &lt;strong&gt;Swap Left and Right View&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;compare editor&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/compare-editor.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The direction of comparison is preserved between invocations of the &lt;strong&gt;Compare&lt;/strong&gt; editor and can also be changed in the &lt;strong&gt;Compare/Patch&lt;/strong&gt; preference page.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;compare preferences&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/compare-preferences.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;switch-workspace-and-restart-menu-items&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#switch-workspace-and-restart-menu-items&quot;&gt;&lt;/a&gt;&amp;amp;aposSwitch Workspace&amp;amp;apos and &amp;amp;aposRestart&amp;amp;apos menu items&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Switch Workspace&lt;/strong&gt; and &lt;strong&gt;Restart&lt;/strong&gt; menu items are now at the bottom of the &lt;strong&gt;File&lt;/strong&gt; menu: just above the &lt;strong&gt;Exit&lt;/strong&gt; item on Windows and Linux, and as last menu items on the Mac.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;switch workspace restart menu items&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/switch-workspace-restart-menu-items.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;quick-access-search-text-in-help&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#quick-access-search-text-in-help&quot;&gt;&lt;/a&gt;Quick Access search text in Help&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now &lt;strong&gt;Search in Help&lt;/strong&gt; after you’ve entered text in the &lt;strong&gt;Quick Access&lt;/strong&gt; dialog. The option is shown when the filter text is longer than three characters, and it is always
      added at the end of the results.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Search in Help&lt;/strong&gt; using the new &lt;strong&gt;Quick Access&lt;/strong&gt; dialog:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access search in help&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/quick-access-search-in-help.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Search in Help&lt;/strong&gt; using the standalone dialog:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access search in help standalone&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/quick-access-search-in-help-standalone.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;command-icons-shown-in-quick-access&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#command-icons-shown-in-quick-access&quot;&gt;&lt;/a&gt;Command icons shown in Quick Access&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Quick Access (Ctrl+3)&lt;/strong&gt; now shows the icon for a &lt;strong&gt;Command&lt;/strong&gt; if available. Otherwise, it still shows the default blue ball.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;command image visible in quick access&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/command-image-visible-in-quick-access.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;colors-in-interactive-popups&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#colors-in-interactive-popups&quot;&gt;&lt;/a&gt;Colors in interactive popups&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Interactive popups like JDT’s &lt;strong&gt;Quick Outline&lt;/strong&gt; don’t use the platform’s tooltip colors any more, since those were sometimes hard to read.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Old style:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old popup color constants&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/old-popup-color-constants.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New style:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new popup color constants&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/new-popup-color-constants.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;simplified-filters-dialog-for-problems-bookmarks-and-tasks-views&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#simplified-filters-dialog-for-problems-bookmarks-and-tasks-views&quot;&gt;&lt;/a&gt;Simplified filters dialog for Problems, Bookmarks, and Tasks views&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Filters&lt;/strong&gt; dialog of the Problems, Bookmarks, and Tasks views has been simplified. If you select several configurations, items matching any
      of these configurations will be shown.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Old dialog in Problems view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old problems filter&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/old-problems-filter.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New dialog in Problems view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new problems filter&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/new-problems-filter.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;filter-dialog-for-problems-bookmarks-and-tasks-views-easier-to-reach&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#filter-dialog-for-problems-bookmarks-and-tasks-views-easier-to-reach&quot;&gt;&lt;/a&gt;Filter dialog for Problems, Bookmarks, and Tasks views easier to reach&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Filters&lt;/strong&gt; dialog is now accessible from the toolbar of the Problems, Bookmarks, and Tasks views.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Previously, it was only accessible via view menu &lt;strong&gt;&amp;gt; Configure Contents…​&lt;/strong&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old filter location&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/old-filter-location.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now also as a toolbar button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new filter location&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/new-filter-location.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;editor-selection-dialog-use-for-all&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#editor-selection-dialog-use-for-all&quot;&gt;&lt;/a&gt;Editor selection dialog: Use for all&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Editor Selection&lt;/strong&gt; dialog now offers a one-click option for choosing the editor that should open all files with the same extension in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example when selecting &quot;file.xyz&quot; and choosing &lt;strong&gt;Open with &amp;gt; Other…​&lt;/strong&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;editor selection dialog one click for all files by type&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/editor-selection-dialog-one-click-for-all-files-by-type.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;more-high-resolution-images&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#more-high-resolution-images&quot;&gt;&lt;/a&gt;More high resolution images&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More images in the old GIF format were replaced by images in the PNG format. In addition, high resolution images where added.
      As PNG can handle transparency much better than GIF, the ugly white borders around shapes visible in the dark theme are now gone for these icons.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To see their full beauty, a high-DPI monitor (e.g. a Retina Mac) is needed. The lower part of the screenshot shows the wizard banner image of the &lt;strong&gt;Import&lt;/strong&gt; dialog in high resolution.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;import before and after&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/import-before-and-after.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The right part of the screenshot shows all the icons in high resolution.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;customize navigator before and after&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/customize-navigator-before-and-after.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;filters-and-customization-in-project-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#filters-and-customization-in-project-explorer&quot;&gt;&lt;/a&gt;&amp;amp;aposFilters and Customization…​&amp;amp;apos in Project Explorer&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Customize View…​&lt;/strong&gt; command in the &lt;strong&gt;Project Explorer&lt;/strong&gt;&amp;amp;aposs view menu has been renamed to &lt;strong&gt;Filters and Customization…​&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;filters and customization menu item&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/filters-and-customization-menu-item.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;copy-details-submenu-for-problems-and-tasks-views&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#copy-details-submenu-for-problems-and-tasks-views&quot;&gt;&lt;/a&gt;Copy Details submenu for Problems and Tasks views&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can copy the description or the resource qualified name of an error, warning, or task into the clipboard using commands in the &lt;strong&gt;Copy Details&lt;/strong&gt; context menu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;problems and tasks copy details submenu&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/problems-and-tasks-copy-details-submenu.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;show-annotation-renamed-to-show-revision-information&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#show-annotation-renamed-to-show-revision-information&quot;&gt;&lt;/a&gt;Show Annotation renamed to Show Revision Information&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For files checked out from CVS, the &lt;strong&gt;Show Annotation&lt;/strong&gt; command in the text editor’s vertical ruler and in the &lt;strong&gt;Team&lt;/strong&gt; menu has been renamed to &lt;strong&gt;Show Revision Information&lt;/strong&gt;.
      This change has been synchronized with the Eclipse Git team provider, so future versions of EGit will use the same name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;other-projects-working-set-in-project-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#other-projects-working-set-in-project-explorer&quot;&gt;&lt;/a&gt;&quot;Other Projects&quot; working set in Project Explorer&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you’re using the &lt;strong&gt;Project Explorer&lt;/strong&gt; and working sets as top-level elements, the &lt;strong&gt;Top Level Elements&lt;/strong&gt; view menu now provides a way to show an &lt;strong&gt;Other Projects&lt;/strong&gt; group
      for projects that are not in one of the currently active working sets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;other projects ws&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/other-projects-ws.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;recently-used-filters-feature-in-project-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#recently-used-filters-feature-in-project-explorer&quot;&gt;&lt;/a&gt;&quot;Recently used filters&quot; feature in Project Explorer&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Project Explorer&lt;/strong&gt; view now has a &lt;strong&gt;Recent Filters&lt;/strong&gt; menu that shows the most recently used filters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;recent filters project explorer&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/recent-filters-project-explorer.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;reduced-window-margins&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#reduced-window-margins&quot;&gt;&lt;/a&gt;Reduced window margins&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The window margins have been reduced to provide more space in the IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Old style:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;window margins old&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/window-margins-old.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New style (see the reduced space below the Quick Access box).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;window margins new&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/window-margins-new.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;external-browsers-on-linux&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#external-browsers-on-linux&quot;&gt;&lt;/a&gt;External browsers on Linux&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On Linux, the list of recognized external browsers has been updated to include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt; (/usr/bin/firefox)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Chrome&lt;/strong&gt; (/usr/bin/google-chrome)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Chromium&lt;/strong&gt; (/usr/bin/chromium-browser)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Epiphany/Gnome Web&lt;/strong&gt; (/usr/bin/epiphany)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Konqueror&lt;/strong&gt; (/usr/bin/konqueror)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;browsers linux update&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/browsers-linux-update.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;gtk-theme-system-property&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#gtk-theme-system-property&quot;&gt;&lt;/a&gt;GTK theme system property&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;SWT now stores the GTK theme used at launch time in a system property, &lt;code&gt;org.eclipse.swt.internal.gtk.theme&lt;/code&gt;. This property can help with troubleshooting
      issues that are specific to certain themes. It can be viewed in &lt;strong&gt;About &amp;gt; Installation Details &amp;gt; Configuration&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;ctrl-e-command-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ctrl-e-command-improvements&quot;&gt;&lt;/a&gt;Ctrl+E command improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can use the &lt;strong&gt;Quick Switch Editor (Ctrl+E)&lt;/strong&gt; command to list and filter all the open editors. This works now also if you have selected a view in the editor area.
      You can filter the list using wildcards, and select editors using mouse or keyboard.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now you can also cycle through the list by pressing &lt;strong&gt;Ctrl+E&lt;/strong&gt; again. Or use &lt;strong&gt;Arrow Up/Down&lt;/strong&gt; as before.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;ctrl e improvements&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/ctrl-e-improvements.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;perspective-descriptions-in-open-perspective-dialog&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#perspective-descriptions-in-open-perspective-dialog&quot;&gt;&lt;/a&gt;Perspective descriptions in Open Perspective dialog&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now see the description for a perspective (if provided by the contributing plug-in) by pressing &lt;strong&gt;F2&lt;/strong&gt; in the &lt;strong&gt;Open Perspective&lt;/strong&gt; dialog.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;open perspective dialog description&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/open-perspective-dialog-description.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-string-matching-in-quick-access&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-string-matching-in-quick-access&quot;&gt;&lt;/a&gt;Improved string matching in Quick Access&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now search for partial descriptions in &lt;strong&gt;Quick Access (Ctrl+3)&lt;/strong&gt;. The search result matches space-separated words in the search string.
      For example, searching for &quot;clone repo&quot;, will match the &quot;Clone a Git Repository&quot; command.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access better string matching&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/quick-access-better-string-matching.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The improved string matching works also in case of parenthesis, or when the search string matches the category name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access better string matching extended&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/quick-access-better-string-matching-extended.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;filter-previous-choices-in-quick-access&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#filter-previous-choices-in-quick-access&quot;&gt;&lt;/a&gt;Filter previous choices in Quick Access&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Quick Access (Ctrl+3)&lt;/strong&gt; result list does not show duplicate elements anymore. Now, if a search result element is already in the &quot;Previous Choices&quot; category,
      it is no longer shown in another category.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access filter previous choices&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/quick-access-filter-previous-choices.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;window-title-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#window-title-configuration&quot;&gt;&lt;/a&gt;Window title configuration&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The title window is now simpler and you can configure it from &lt;strong&gt;Preferences&lt;/strong&gt;. By default the title displays &lt;strong&gt;workspace name&lt;/strong&gt;, &lt;strong&gt;editor path&lt;/strong&gt; and &lt;strong&gt;product name&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;simplified window title&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/simplified-window-title.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now use &lt;strong&gt;Preferences &amp;gt; Workspace&lt;/strong&gt; to choose what to display in the window title: &lt;strong&gt;workspace name&lt;/strong&gt;, &lt;strong&gt;perspective name&lt;/strong&gt;, &lt;strong&gt;workspace path&lt;/strong&gt;, and &lt;strong&gt;product name&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;improved window title&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/improved-window-title.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;launch-group-launch-configuration-type&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#launch-group-launch-configuration-type&quot;&gt;&lt;/a&gt;&quot;Launch Group&quot; launch configuration type&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new &lt;strong&gt;Launch Group&lt;/strong&gt; launch configuration type allows you to launch multiple other launch configurations sequentially, with configurable actions after launching each group member:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;None&lt;/strong&gt;: Continue launching the next member right away&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Wait until terminated&lt;/strong&gt;: Continue launching the next member only after this member has terminated&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Delay&lt;/strong&gt;: Delay launching the next member for a given amount of seconds.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;launch groups&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/launch-groups.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New launch groups can be created via the &lt;strong&gt;Run &amp;gt; Run Configurations…​&lt;/strong&gt; or &lt;strong&gt;Run &amp;gt; Debug Configurations…​&lt;/strong&gt; dialogs.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;consistent-heap-status-colors-under-linux&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#consistent-heap-status-colors-under-linux&quot;&gt;&lt;/a&gt;Consistent heap status colors under Linux&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The heap status had poor contrast on Linux since GTK3.04. This has been resolved for the heap status to look consistent across all platforms.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;heapstatusfix&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/heapstatusfix.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;fixed-progress-view-colors-for-the-dark-theme&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#fixed-progress-view-colors-for-the-dark-theme&quot;&gt;&lt;/a&gt;Fixed Progress view colors for the dark theme&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Progress&lt;/strong&gt; view has been adjusted for the Eclipse dark theme.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old progress view&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/old-progress-view.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new progress view&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/new-progress-view.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;breakpoints-view-sort-by-creation-time&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#breakpoints-view-sort-by-creation-time&quot;&gt;&lt;/a&gt;Breakpoints view: Sort By &amp;gt; Creation Time&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;strong&gt;Breakpoints&lt;/strong&gt; view’s view menu, a new &lt;strong&gt;Sort By&lt;/strong&gt; option has been added. This allows sorting by two ways:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;: Current default order, sorts by the displayed name&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Creation Time&lt;/strong&gt;: Newly created breakpoints will be shown on top&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;breakpoints sort by&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/breakpoints-sort-by.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildcards-in-quick-access&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#wildcards-in-quick-access&quot;&gt;&lt;/a&gt;Wildcards in Quick Access&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now use &lt;strong&gt;*&lt;/strong&gt; and &lt;strong&gt;?&lt;/strong&gt; as wildcards to filter &lt;strong&gt;Quick Access (Ctrl+3)&lt;/strong&gt; items. The match ranges are displayed in bold.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quick access wildcard filter&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/quick-access-wildcard-filter.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;show-hide-status-bar&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#show-hide-status-bar&quot;&gt;&lt;/a&gt;Show/hide Status Bar&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now hide and show the bottom status bar via menu: &lt;strong&gt;Window &amp;gt; Appearance &amp;gt; Hide (Show) Status Bar&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;toggle status bar from menu&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/toggle-status-bar-from-menu.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In &lt;strong&gt;Quick Access&lt;/strong&gt;, the command is called &lt;strong&gt;Toggle Statusbar&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-launch-groups&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-launch-groups&quot;&gt;&lt;/a&gt;Improved Launch Groups&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The UI for the new &lt;strong&gt;Launch Groups&lt;/strong&gt; feature in the &lt;strong&gt;Run/Debug Configurations…​&lt;/strong&gt; dialog has been reworked to be more intuitive and user friendly.
      Also, additional configuration possibilities have been added:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;&amp;amp;aposWait for console output (regexp)&amp;amp;apos post launch action&lt;/strong&gt;: Allows to delay further processing of launch group elements until a certain output (matching a regular expression) appears on the console of the given group element.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;&amp;amp;aposAdopt launch if already running&amp;amp;apos&lt;/strong&gt;: Allows to control the behaviour of the group when the launch configuration referenced by the launch group element is already running (no matter who launched it). If checked, the launch configuration will not be launched again if it is running already. The existing launch will be adopted by the group (i.e. terminating the group will also terminate this launch). Any configured post launch action will still be executed!&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;improved launch groups&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/improved-launch-groups.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;content-assist-for-feature-name-in-model-editor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#content-assist-for-feature-name-in-model-editor&quot;&gt;&lt;/a&gt;Content Assist for Feature Name in Model Editor&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now use &lt;strong&gt;Ctrl+Space&lt;/strong&gt; to trigger content assist when selecting the &lt;strong&gt;Feature Name&lt;/strong&gt; in the &lt;strong&gt;Model Editor&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;content assist model editor&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/content-assist-model-editor.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;model-editor-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#model-editor-improvements&quot;&gt;&lt;/a&gt;Model Editor improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The elements proposed in the &lt;strong&gt;Add child&lt;/strong&gt; menu are now filtered to a minimal list containing allowed elements only.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;filter suggested elements&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/filter-suggested-elements.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;generic-editor-can-now-read-patch-and-diff-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#generic-editor-can-now-read-patch-and-diff-files&quot;&gt;&lt;/a&gt;Generic editor can now read patch and diff files&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;An extension was provided to the generic editor so that it now can provide syntax highlighting for files with the &lt;code&gt;.patch&lt;/code&gt; or &lt;code&gt;.diff&lt;/code&gt; extension.
      Right-click the file and choose &lt;strong&gt;Open with &amp;gt; Generic Text Editor&lt;/strong&gt; to see the editor in action.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;patch diff editor&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/patch-diff-editor.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-exit-and-restart-dialogs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-exit-and-restart-dialogs&quot;&gt;&lt;/a&gt;Improved exit and restart dialogs&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The exit and restart dialogs now use verbs instead of &lt;strong&gt;OK/No/Yes&lt;/strong&gt;, which makes the dialogs more direct and specific.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;confirm exit dialog small&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/confirm-exit-dialog-small.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;p2 restart dialog small&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/p2-restart-dialog-small.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-extending-existing-css-preference-nodes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#support-for-extending-existing-css-preference-nodes&quot;&gt;&lt;/a&gt;Support for extending existing CSS preference nodes&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CSS definitions for preferences can now use pseudo selectors. This allows that other plug-ins extend preference CSS nodes, instead of overriding them.
       This makes the default Eclipse dark theme much more consistent and usable.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example styling with EGit installed before this development:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;code completion dark theme old&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/code-completion-dark-theme-old.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old search result hightlight color&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/old-search-result-hightlight-color.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example styling with EGit installed after this development:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;code completion dark theme new&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/code-completion-dark-theme-new.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new search result hightlight color&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/new-search-result-hightlight-color.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;option-to-copy-your-preferences-during-workspace-switch&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#option-to-copy-your-preferences-during-workspace-switch&quot;&gt;&lt;/a&gt;Option to copy your preferences during workspace switch&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now copy your preferences during a switch to a new or existing workspace.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;copy preferences ws switch&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/copy-preferences-ws-switch.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;option-to-disable-problems-view-decoration-on-startup&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#option-to-disable-problems-view-decoration-on-startup&quot;&gt;&lt;/a&gt;Option to disable Problems view decoration on startup&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default, the &lt;strong&gt;Problems&lt;/strong&gt; view icon no longer shows an errors/warnings overlay after startup, unless the &lt;strong&gt;Problems&lt;/strong&gt; view is on top of the view stack.
      To enable the errors/warnings overlay also if the &lt;strong&gt;Problems&lt;/strong&gt; view is minimized or not on top, a new &lt;strong&gt;Show Problems view decorations on startup&lt;/strong&gt; option
      has been added to &lt;strong&gt;Preferences &amp;gt; General &amp;gt; Startup and Shutdown&lt;/strong&gt;. By default, this preference is disabled.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;problems view startup preference&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/problems-view-startup-preference.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;ant-1-10-1&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ant-1-10-1&quot;&gt;&lt;/a&gt;Ant 1.10.1&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Eclipse has adopted Ant version 1.10.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;java-developement-tools-jdt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#java-developement-tools-jdt&quot;&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;show-junit-failure-trace-in-console-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#show-junit-failure-trace-in-console-view&quot;&gt;&lt;/a&gt;Show JUnit failure trace in Console view&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new button has been added to the JUnit Failure Trace header to show the stack trace of a failed JUnit test in the Console view. The Console view makes it convenient to view
      a long and wide stack trace, copy parts of the stack trace and navigate to the classes on the stack trace using hyperlinks.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;show junit failure trace in console view&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/show-junit-failure-trace-in-console-view.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;skip-button-in-organize-imports-dialog&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#skip-button-in-organize-imports-dialog&quot;&gt;&lt;/a&gt;Skip button in Organize Imports dialog&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;While using the &lt;strong&gt;Organize Imports&lt;/strong&gt; dialog to import multiple unresolved types, you can now skip a type without cancelling the whole operation by using the new &lt;strong&gt;Skip&lt;/strong&gt; button.
      No import statement is added for the skipped type.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;skip button in organize imports dialog&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/skip-button-in-organize-imports-dialog.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;type-name-with-extension-in-new-java-type-creation-wizards&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#type-name-with-extension-in-new-java-type-creation-wizards&quot;&gt;&lt;/a&gt;Type name with extension in New Java Type creation wizards&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New Java Type creation wizards now accept the &lt;code&gt;.java&lt;/code&gt; extension with the type name instead of showing the error message: &quot;Type name must not be qualified&quot;.
      For example, to create a new class &lt;code&gt;com.test.C1&amp;lt;T&amp;gt;.java&lt;/code&gt;, you can directly paste this qualified type name with extension in the Name field of the New Java Class wizard.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;type name with extension&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M1/images/type-name-with-extension.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;method-result-after-step-operations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#method-result-after-step-operations&quot;&gt;&lt;/a&gt;Method result after step operations&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;During debugging, the last method result (per return or throw) that was observed during &lt;strong&gt;Step Into&lt;/strong&gt;, &lt;strong&gt;Step Over&lt;/strong&gt; or &lt;strong&gt;Step Return&lt;/strong&gt;, is shown as first line in the &lt;strong&gt;Variables&lt;/strong&gt; view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;step show methodresult&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/step-show-methodresult.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This can be disabled with the new option &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Debug &amp;gt; Show method result after a step operation (if supported by the VM; may be slow)&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;triggers-for-breakpoints&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#triggers-for-breakpoints&quot;&gt;&lt;/a&gt;Triggers for breakpoints&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now define a set of triggers for the breakpoints in a workspace&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;trigger breakpoint properties&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/trigger-breakpoint-properties.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Any breakpoint can be set as a trigger point by using &lt;strong&gt;Breakpoint Properties…​&lt;/strong&gt; dialog or the &lt;strong&gt;Breakpoints&lt;/strong&gt; view’s detail pane.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;trigger breakpoint view ruler&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M2/images/trigger-breakpoint-view-ruler.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Triggers will be rendered with an overlay of &quot;T&quot; and the breakpoints suppressed by the triggers will be rendered with an overlay of &quot;T&quot; with a cut.
      All the other breakpoints that are initially suppressed by triggers will be hit only after any of the trigger points has been hit. All the triggers
      are disabled after a trigger point is hit and will be re-enabled after the run.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;remote-java-application-socket-listen-type-supports-multiple-incoming-connections&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#remote-java-application-socket-listen-type-supports-multiple-incoming-connections&quot;&gt;&lt;/a&gt;Remote Java Application &quot;Socket Listen&quot; type supports multiple incoming connections&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Remote Java Application&lt;/strong&gt; debug configuration’s &lt;strong&gt;Standard (Socket Listen)&lt;/strong&gt; connection type now supports incoming connections from multiple VMs.
      This is useful for debugging distributed systems. The connection limit may be set to a fixed number, or 0 for unlimited connections.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;remote java listen conn limit&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/remote-java-listen-conn-limit.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-option-to-disable-hcr&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#new-option-to-disable-hcr&quot;&gt;&lt;/a&gt;New option to disable HCR&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now disable Hot Code Replace (HCR) if it causes any trouble or if you want to avoid code changes in a debug target. HCR is enabled by default
      but can be disabled in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Debug&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;option disable hcr&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/option-disable-hcr.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;escape-text-when-pasting-into-a-string-literal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#escape-text-when-pasting-into-a-string-literal&quot;&gt;&lt;/a&gt;Escape text when pasting into a string literal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Java &amp;gt; Editor &amp;gt; Typing &amp;gt; Escape text when pasting into a string literal&lt;/strong&gt; preference option is now enabled by default.
      This will escape the special characters in pasted strings when they are pasted into an existing string literal.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;escape text when pasting&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/escape-text-when-pasting.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To paste without escaping, you can either paste outside of a string literal, or you can disable &lt;strong&gt;Edit &amp;gt; Smart Insert Mode&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;set-colors-for-javadoc&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#set-colors-for-javadoc&quot;&gt;&lt;/a&gt;Set colors for Javadoc&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can use the new color preferences to set the foreground text color and the background color in the Javadoc view and hovers:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;javadoc colors&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/javadoc-colors.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hide-inherited-members-from-java-lang-object&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hide-inherited-members-from-java-lang-object&quot;&gt;&lt;/a&gt;Hide inherited members from java.lang.Object&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can hide all inherited members from &lt;code&gt;java.lang.Object&lt;/code&gt; in the &lt;strong&gt;Quick Outline (Ctrl+O)&lt;/strong&gt; by using the new filter from the drop-down menu (&lt;strong&gt;Ctrl+F10&lt;/strong&gt;):&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;hide inherited object members&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/hide-inherited-object-members.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-java-index&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#new-java-index&quot;&gt;&lt;/a&gt;New Java index&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Eclipse Oxygen contains an experimental new Java index which is enabled by default. If you suspect an index-related problem,
      you can disable the new index from &lt;strong&gt;Preferences &amp;gt; Java&lt;/strong&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new java index&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M3/images/new-java-index.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Currently, the new index shouldn’t affect your experience. Once the work is finished, we expect big performance improvements
      for type hierarchies and in scenarios with many JARs.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;consistent-javadoc-colors-usage-under-linux&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#consistent-javadoc-colors-usage-under-linux&quot;&gt;&lt;/a&gt;Consistent Javadoc colors usage under Linux&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Javadoc color usage on Linux was inconsistent since GTK 3.04. This has been resolved and support for Javadoc on the Eclipse Dark Theme has been added.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;javadocbefore&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/javadocbefore.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;javadocafter&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/javadocafter.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dark theme support:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;javadocdarktheme&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/javadocdarktheme.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;open-implementation-of-selected-type&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#open-implementation-of-selected-type&quot;&gt;&lt;/a&gt;Open Implementation of selected Type&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Open Implementation&lt;/strong&gt; hyperlink and the &lt;strong&gt;Navigate &amp;gt; Open Implementation&lt;/strong&gt; action now open the implementation of the selected interface or class also.
      In the past, &lt;strong&gt;Open Implementation&lt;/strong&gt; was only available for methods.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;open implementation of type&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/open-implementation-of-type.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The hyperlink popup shows up when you hold &lt;strong&gt;Ctrl&lt;/strong&gt; (on the Mac: &lt;strong&gt;Command&lt;/strong&gt;), unless you’ve changed the modifier on the &lt;strong&gt;Hyperlinking&lt;/strong&gt; preference page.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;automatically-insert-braces-at-correct-position&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#automatically-insert-braces-at-correct-position&quot;&gt;&lt;/a&gt;Automatically insert Braces at correct position&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Java &amp;gt; Editor &amp;gt; Typing &amp;gt; Automatically insert at correct position &amp;gt; Braces&lt;/strong&gt; preference option is now enabled by default.
      This will automatically insert the braces where they are required.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;auto insert braces&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M4/images/auto-insert-braces.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;quick-fix-to-move-type-annotations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#quick-fix-to-move-type-annotations&quot;&gt;&lt;/a&gt;Quick Fix to move type annotations&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The rules for the placement of Java 8 &quot;type annotations&quot; introduced via JSR 308 are sometimes surprising.
      In case of errors, a new Quick Fix &lt;strong&gt;Move type annotation&lt;/strong&gt; is offered, that moves the type annotation to a location that corresponds to what was probably intended.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quickfix move type annotation&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/quickfix-move-type-annotation.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;toggle-tracepoint&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#toggle-tracepoint&quot;&gt;&lt;/a&gt;Toggle Tracepoint&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new action &lt;strong&gt;Run &amp;gt; Toggle Tracepoint&lt;/strong&gt; has been added.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;toggle trace point run&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/toggle-trace-point-run.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The action creates a conditional breakpoint using the &quot;systrace&quot; template, which prints the class and method name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;toggle trace point conditional breakpoint&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M5/images/toggle-trace-point-conditional-breakpoint.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This makes use of another new feature of conditional breakpoints: As long as the condition doesn’t explicitly return a boolean true,
      the condition is now considered to implicitly return false, and the breakpoint will not suspend execution.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hidpi-jdt-icons&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hidpi-jdt-icons&quot;&gt;&lt;/a&gt;HiDPI JDT icons&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Composite icons such as Java element icons with modifier overlays are now rendered in high resolution in environments that support HiDPI images.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jdt composite images hidpi&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/jdt-composite-images-hidpi.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;warnings-for-unlikely-argument-types&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#warnings-for-unlikely-argument-types&quot;&gt;&lt;/a&gt;Warnings for unlikely argument types&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Many developers have learned the hard way, that certain uses of Java collections that pass the compiler’s type check, may still contain &quot;type errors&quot;,
      resulting in unexpected runtime behaviour. A new analysis has been added to the Eclipse compiler for Java that will detect the most common bugs in this area.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The common reason behind this problem is the fact that not all methods of those collection types make use of generics in the way one might expect.
      As a result it is possible to create a Set&amp;lt;Short&amp;gt;, whose add(Short) method will only accept arguments of type Short,
      yet method remove(Object) will happily accept literally any argument, because the method’s parameter has type Object.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Here is a code snippet that seems to add and remove the same element from the set, but at a closer look the remove call has no effect.
      What is difficult to see for the naked eye is now flagged by a new warning:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unlikely1 basic&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/unlikely1-basic.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In a simple world, this would be all there is to say, but over time people have developed various code patterns that rely on these overly general signatures.
      Consider the following use of subtyping:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unlikely2 number allowed&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/unlikely2-number-allowed.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Depending on your coding style this may or may not be accepted as a legitimate short hand for:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;if (n instanceof Short) set.remove((Short) n);&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To reduce the churn caused by the new analysis, we developed some heuristics that filter out cases where types are &quot;sufficiently similar&quot;, so the above goes unwarned.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As with any heuristic, there is no clear line. This implies that the compiler may show &quot;unwanted&quot; warnings, or filter out invocations that are in fact bugs.
      For the former case, &lt;code&gt;@SuppressWarnings(&quot;unlikely-arg-type&quot;)&lt;/code&gt; will document the exception both for the user and for the compiler.
      For the latter case, we provide an option to tighten the rules, namely to apply strict type compatibility checks instead of said heuristics.
      For this extra scrutiny you may enable the sub-option Perform strict analysis against the expected type in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler &amp;gt; Errors/Warnings &amp;gt; Potential programming problems&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unlikely3 options&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/unlikely3-options.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Similarly, a check with default severity &quot;Info&quot; is offered for unlikely invocations of &lt;code&gt;java.lang.Object.equals(Object) and java.util.Objects.equals(Object,Object)&lt;/code&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unlikely5 equals&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/unlikely5-equals.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;conditional-watchpoint&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#conditional-watchpoint&quot;&gt;&lt;/a&gt;Conditional watchpoint&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Like for line breakpoints, conditions can now also be added to &lt;strong&gt;Watchpoints&lt;/strong&gt;, where the old value of the field can be used as part of the condition.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;watchpoint condition&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/watchpoint-condition.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;code-formatter-new-way-to-count-comment-width&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#code-formatter-new-way-to-count-comment-width&quot;&gt;&lt;/a&gt;Code formatter: new way to count comment width&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new option has been added in the code formatter profile editor that makes the formatter count a comment’s width from its starting position instead
      of the beginning of the line. This allows more space for comments in heavily indented blocks of code and for line comments added to the right of some code,
       but at the same time keeps comments that start at the beginning of the line from getting too wide and uncomfortable to read.
      You can change this setting in the &lt;strong&gt;Comments&lt;/strong&gt; section, under the &lt;strong&gt;Line&lt;/strong&gt; width group:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;formatter comment width ui&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/formatter-comment-width-ui.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;formatter comment width preview&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M6/images/formatter-comment-width-preview.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hide-deprecated-fields-and-methods&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#hide-deprecated-fields-and-methods&quot;&gt;&lt;/a&gt;Hide deprecated fields and methods&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now hide the deprecated fields and methods in &lt;strong&gt;Outline&lt;/strong&gt; view, &lt;strong&gt;Members&lt;/strong&gt; view, &lt;strong&gt;Package Explorer&lt;/strong&gt; view, &lt;strong&gt;Project Explorer&lt;/strong&gt; view, and &lt;strong&gt;Quick Outline&lt;/strong&gt;
      by using the new filter from their drop-down menu (&lt;strong&gt;Ctrl+F10&lt;/strong&gt;):&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;hide deprecated fields and methods&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/hide-deprecated-fields-and-methods.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;group-by-project-in-search-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#group-by-project-in-search-view&quot;&gt;&lt;/a&gt;Group by Project in Search view&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The default grouping of Java search results in the Search view has been changed to Group by Project. Earlier the results were grouped by package.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;group by project in search view&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/group-by-project-in-search-view.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;defaults-for-annotation-type-elements-in-javadoc&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#defaults-for-annotation-type-elements-in-javadoc&quot;&gt;&lt;/a&gt;Defaults for annotation type elements in Javadoc&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The default value of an annotation type element is now shown in the Javadoc view and hover.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;defaults for annotation type elements in javadoc&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/defaults-for-annotation-type-elements-in-javadoc.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;show-logical-structure-enabled-by-default&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#show-logical-structure-enabled-by-default&quot;&gt;&lt;/a&gt;Show Logical Structure enabled by default&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;strong&gt;Variables&lt;/strong&gt; view, &lt;strong&gt;Show Logical Structure&lt;/strong&gt; is now enabled by default. E.g. collection objects now directly show their contained elements instead of their internal structure.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jdt debug show logical structure by default&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/jdt-debug-show-logical-structure-by-default.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Show Logical Structure&lt;/strong&gt; context menu lets you choose or edit the representation.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jdt debug edit logical structure context menu&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/jdt-debug-edit-logical-structure-context-menu.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;pass-compiler-options-to-annotation-processors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#pass-compiler-options-to-annotation-processors&quot;&gt;&lt;/a&gt;Pass compiler options to annotation processors&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now pass compiler options to annotation processors using %variable% syntax in &lt;strong&gt;Project &amp;gt; Properties &amp;gt; Java Compiler &amp;gt; Annotation Processing&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jdt apt processor option variables&quot; src=&quot;https://eclipse.org/eclipse/news/4.7/M7/images/jdt-apt-processor-option-variables.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This allows processors to compile Java sources using the Java project’s settings without manually maintaining this information in the processor options.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-next&quot;&gt;&lt;/a&gt;What is next?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having JBoss Tools 4.5 and Developer Studio 11.0 out we are already working on the next maintenance release for Eclipse Oxygen.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 14 Aug 2017 17:04:57 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Potential adware plugin on Eclipse Marketplace - Eclipse Class Decompiler</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/X2jtvLSSmpw/20170814_security_bulletin.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/X2jtvLSSmpw/20170814_security_bulletin.php</link>
	<description>A listing on Eclipse Marketplace, called Eclipse Class Decompiler, contains binary code that could be used for adware and could potentially download files to Eclipse workspaces.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/X2jtvLSSmpw&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 14 Aug 2017 14:40:00 +0000</pubDate>
</item>
<item>
	<title>Ian Skerrett: Goodbye Kat, Welcome Stephanie</title>
	<guid isPermaLink="false">http://ianskerrett.wordpress.com/?p=4221</guid>
	<link>http://feedproxy.google.com/~r/IanSkerrett/~3/qHgc4hit7S8/</link>
	<description>&lt;p&gt;This is the last week Kat Hirsch, the Eclipse Foundation marketing specialist, will be with the Foundation. Kat is moving on to a new opportunity and the next step in her marketing career.  We have been lucky to have Kat at the Foundation and we will certainly miss her dedication and passion.&lt;/p&gt;
&lt;p&gt;At the same time, we are lucky to announce &lt;a href=&quot;https://accounts.eclipse.org/users/sswart&quot;&gt;Stephanie Swart&lt;/a&gt; will be taking on the role of Marketing Specialist. Some Eclipse community members might already know Stephanie in her current role of Program Coordinator for the Foundation. Stephanie has done a great job helping and coordinating Eclipse project leaders and committers through the Eclipse Development Process. I am thrilled she has agreed to join the marketing team and look forward to working with her to raise the awareness of Eclipse projects and the Eclipse Working Groups.&lt;/p&gt;
&lt;p&gt;Please join me to welcome Stephanie to the Foundation marketing team.&lt;/p&gt;
&lt;p&gt;btw, we are now in the process of looking for a new &lt;a href=&quot;http://businesssherpagroup.com/job/program-coordinator-2/&quot;&gt;Program Coordinator&lt;/a&gt; so please pass along any potential candidates.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/ianskerrett.wordpress.com/4221/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/ianskerrett.wordpress.com/4221/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=ianskerrett.wordpress.com&amp;amp;blog=405862&amp;amp;post=4221&amp;amp;subd=ianskerrett&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/IanSkerrett/~4/qHgc4hit7S8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 14 Aug 2017 12:00:13 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: AWS Joining CNCF</title>
	<guid isPermaLink="false">http://aniszczyk.org/?p=4132</guid>
	<link>http://aniszczyk.org/2017/08/14/aws-joining-cncf/</link>
	<description>&lt;p&gt;It’s been a little over a year and a half since I started to help build the &lt;a href=&quot;https://cncf.io&quot;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF) from scratch. One of our original goals was to build a modern open source foundation focused on a new form of cloud computing called “cloud native” (essentially think of microservices that run in containers that are orchestrated) and to get all the major cloud providers at the table to adopt this form of computing.&lt;/p&gt;
&lt;p&gt;Last week, we were happy to welcome AWS to CNCF as a member and that now brings us to having the &lt;strong&gt;top five cloud providers in the world at the table committing to adopting and promoting cloud native computing&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/AWS?src=hash&quot;&gt;#AWS&lt;/a&gt; is excited to join &lt;a href=&quot;https://twitter.com/CloudNativeFdn&quot;&gt;@CloudNativeFdn&lt;/a&gt; as Platinum member, &lt;a href=&quot;https://twitter.com/adrianco&quot;&gt;@adrianco&lt;/a&gt; will be on the Board  &lt;a href=&quot;https://t.co/jfDiG7FCZ4&quot;&gt;https://t.co/jfDiG7FCZ4&lt;/a&gt;  &lt;a href=&quot;https://t.co/aIAFfBAUz1&quot;&gt;https://t.co/aIAFfBAUz1&lt;/a&gt; &lt;a href=&quot;https://t.co/VScD751VP1&quot;&gt;pic.twitter.com/VScD751VP1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— AWS Open Source (@AWSOpen) &lt;a href=&quot;https://twitter.com/AWSOpen/status/895269771834347524&quot;&gt;August 9, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;First off, it’s always great to see an original vision of when we started CNCF come into reality, you can &lt;a href=&quot;https://medium.com/@adrianco/cloud-native-computing-5f0f41a982bf&quot;&gt;read more&lt;/a&gt; from &lt;a class=&quot;link link link--darken link--darker u-baseColor--link&quot; dir=&quot;auto&quot; href=&quot;https://medium.com/@adrianco?source=post_header_lockup&quot;&gt;Adrian Cockcroft&lt;/a&gt; why they decided to join CNCF and support cloud native computing.&lt;/p&gt;
&lt;p&gt;Second, I think it’s great to see a company like Amazon expanding its open source efforts as they where one of the last large companies without a formal open source program. They recently started an official open source program office &lt;a href=&quot;https://twitter.com/AWSOpen&quot;&gt;@AWSOpen&lt;/a&gt; under the leadership of Adrian Cockroft and Zaheda Borat and it’s been great to have them participate in the &lt;a href=&quot;http://todogroup.org&quot;&gt;TODO Group&lt;/a&gt; too!&lt;/p&gt;
&lt;p&gt;Anyways, always great to see large and impactful companies increase their commitment to open source. Now it’s interesting to think what large companies out there don’t have an official open source program or strategy (I’ll leave this as an exercise to the reader).&lt;/p&gt;</description>
	<pubDate>Mon, 14 Aug 2017 09:50:57 +0000</pubDate>
</item>
<item>
	<title>Tom Schindl: Introducing (another/additional) JavaFX TestFramework</title>
	<guid isPermaLink="false">http://tomsondev.bestsolution.at/?p=5078</guid>
	<link>https://tomsondev.bestsolution.at/2017/08/13/introducing-anotheradditional-javafx-testframework/</link>
	<description>&lt;p&gt;Let me start with the statement that &lt;a href=&quot;https://github.com/TestFX/TestFX&quot;&gt;TestFX&lt;/a&gt; is somewhat the default JUnit-Testframework for JavaFX application and is what we proposed to use to all our customers and our projects until today where we introduce our own one.&lt;/p&gt;
&lt;p&gt;There are 2 different problem vectors we have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A licensing issue we have with it at &lt;a href=&quot;http://eclipse.org/&quot;&gt;Eclipse.org&lt;/a&gt;&lt;/strong&gt;: TestFX is licensed under &lt;a href=&quot;https://en.wikipedia.org/wiki/European_Union_Public_Licence&quot;&gt;EUPL&lt;/a&gt; which to me as a software developer looks ok but it looks like the IP-Department at &lt;a href=&quot;http://eclipse.org/&quot;&gt;Eclipse.org&lt;/a&gt; is not happy about it and refused me to use it. I don’t blame anyone but need to cope with the situation as is!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implementing JUnit-Tests for OSGi-JavaFX applications&lt;/strong&gt;: This is a pure technical issue and something we could have solved (although it would have meant to change the way TestFX works) but after having hit the licensing problem my motivation to resolve that problem was not really there&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyways let’s look at what I’ve started to implement as a replacement for TestFX.&lt;/p&gt;
&lt;h2&gt;BestSolution FX-Test&lt;/h2&gt;
&lt;p&gt;First of all we decided for now that we don’t integrate the test-framework into &lt;a href=&quot;http://efxclipse.org/&quot;&gt;e(fx)clipse&lt;/a&gt; but treat it as an independent entity at &lt;a href=&quot;https://github.com/BestSolution-at/FX-Test&quot;&gt;github&lt;/a&gt; and release it under EPL from there.&lt;/p&gt;
&lt;p&gt;Writing JUnit-Tests is done by subclassing a base class (current only one available is &lt;code&gt;FXComponentTest&lt;/code&gt;) and implementing your JUnit-Tests might look like this:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;@Test
public void sample() {
  // Search with a css-selector query
  // and generated a click on the button
  rcontroller().cssFirst(&quot;.button&quot;).get().click();
}
&lt;/pre&gt;
&lt;p&gt;In contrast to TestFX, tests written with our API can not run directly but you need to decided if you want to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use a specific runner using &lt;code&gt;@RunWith(FXRunner.class)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use a Rule &lt;code&gt;@FXTest&lt;/code&gt; and annotate all UI-Test methods with it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;which on the plus-side means that the &lt;code&gt;@Test&lt;/code&gt;-methods are executed on the JavaFX-UI-Thread (unlike TestFX where they are executed on another thread most like the main-thread)&lt;/p&gt;
&lt;p&gt;For more information that a look at the project &lt;a href=&quot;https://github.com/BestSolution-at/FX-Test/blob/master/README.md&quot;&gt;README.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let me close this post saying that we are very early in the development and things are still in the flux so we are happy for any feedback we get.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/tomsondev.wordpress.com/5078/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/tomsondev.wordpress.com/5078/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=tomsondev.bestsolution.at&amp;amp;blog=7995503&amp;amp;post=5078&amp;amp;subd=tomsondev&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 13 Aug 2017 19:56:48 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Vert.x 3.5.0.Beta1</title>
	<guid isPermaLink="true">http://vertx.io/blog/vert-x-3-5-0-beta1</guid>
	<link>http://vertx.io/blog/vert-x-3-5-0-beta1</link>
	<description>&lt;article&gt;&lt;p&gt;it’s summer time and we have just released Vert.x 3.5.0.Beta1!&lt;/p&gt;
&lt;h3 id=&quot;let-s-go-rxjava2&quot;&gt;Let’s go RxJava2&lt;/h3&gt;
&lt;p&gt;First and foremost this release delivers the RxJava2 API with support of its full range of types.&lt;/p&gt;
&lt;p&gt;In addition of &lt;code&gt;Single&lt;/code&gt;, Rxified APIs expose also the&lt;code&gt;Completable&lt;/code&gt; and &lt;code&gt;Maybe&lt;/code&gt; types&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;// expose &lt;span class=&quot;hljs-type&quot;&gt;Handler&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;AsyncResult&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt;&amp;gt;&amp;gt;
&lt;span class=&quot;hljs-type&quot;&gt;Completable&lt;/span&gt; completable = server.rxClose();

completable.subscribe(() -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;closed&quot;&lt;/span&gt;));

// expose &lt;span class=&quot;hljs-type&quot;&gt;Handler&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;AsyncResult&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt; where the &lt;span class=&quot;hljs-literal&quot;&gt;result&lt;/span&gt; can be null
&lt;span class=&quot;hljs-type&quot;&gt;Maybe&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;&amp;gt; ipAddress = dnsClient.rxLookup(&lt;span class=&quot;hljs-string&quot;&gt;&quot;www.google.com&quot;&lt;/span&gt;);
ipAddress.subscribe(
  value -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;resolved to &quot;&lt;/span&gt; + value),
  err -&amp;gt; err.printStackTrace(),
  () -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;does not resolve&quot;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RxJava augments Vert.x streams with a &lt;code&gt;toObservable()&lt;/code&gt; method, RxJava2 adds the &lt;code&gt;toFlowable()&lt;/code&gt; method:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-prompt&quot;&gt;// Flowable&lt;/span&gt; maps to a &lt;span class=&quot;hljs-constant&quot;&gt;ReadStream&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-constant&quot;&gt;Buffer&lt;/span&gt;&amp;gt;
&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt; back-pressured stream
&lt;span class=&quot;hljs-prompt&quot;&gt;Flowable&lt;/span&gt; flowable = asyncFile.toFlowable();

&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt; but we still can get an &lt;span class=&quot;hljs-constant&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-constant&quot;&gt;Buffer&lt;/span&gt;&amp;gt;
&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt; non back-pressured stream
&lt;span class=&quot;hljs-prompt&quot;&gt;Observable&lt;/span&gt; flowable = asyncFile.toObservable();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What’s so different between &lt;code&gt;Flowable&lt;/code&gt; and &lt;code&gt;Observable&lt;/code&gt; ? the former handles back-pressure, i.e the
subscriber can control the flow of items and the later can not!!!&lt;/p&gt;
&lt;p&gt;You can read the documentation in the beta section of the &lt;a href=&quot;http://vertx.io/docs/3.5.0.Beta1/vertx-rx/java2/&quot;&gt;docs&lt;/a&gt;
or go straight to the &lt;a href=&quot;https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/rxjava2-examples&quot;&gt;examples&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;mqtt-client&quot;&gt;MQTT Client&lt;/h3&gt;
&lt;p&gt;In Vert.x 3.4 we added the MQTT server, 3.5 completes the MQTT story with the MQTT client:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;MqttClient mqttClient = MqttClient.create(vertx,
   &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MqttClientOptions()
     .setPort(BROKER_PORT)
     .setHost(BROKER_HOST)).connect(ar -&amp;gt;
  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ar.succeeded()) {
    System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Connected to a server&quot;&lt;/span&gt;);

    mqttClient.publish(
      MQTT_TOPIC,
      Buffer.buffer(MQTT_MESSAGE),
      MqttQoS.AT_MOST_ONCE,
      &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;,
      &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;,
      s -&amp;gt; mqttClient.disconnect(d -&amp;gt; System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Disconnected from server&quot;&lt;/span&gt;)));
  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {
    System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Failed to connect to a server&quot;&lt;/span&gt;);
    ar.cause().printStackTrace();
  }
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can find MQTT client and server examples &lt;a href=&quot;https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1/mqtt-examples&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;auth-handler-chaining&quot;&gt;Auth handler chaining&lt;/h3&gt;
&lt;p&gt;There are times when you want to support multiple authN/authZ mechanisms in a single application.&lt;/p&gt;
&lt;p&gt;Vert.x Web supports auth handlers &lt;a href=&quot;http://vertx.io/docs/3.5.0.Beta1/vertx-web/java/#_chaining_multiple_auth_handlers&quot;&gt;chaining&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;ChainAuthHandler chain = ChainAuthHandler.create();

&lt;span class=&quot;hljs-comment&quot;&gt;// add http basic auth handler to the chain&lt;/span&gt;
chain.&lt;span class=&quot;hljs-built_in&quot;&gt;append&lt;/span&gt;(BasicAuthHandler.create(provider));

&lt;span class=&quot;hljs-comment&quot;&gt;// add form redirect auth handler to the chain&lt;/span&gt;
chain.&lt;span class=&quot;hljs-built_in&quot;&gt;append&lt;/span&gt;(RedirectAuthHandler.create(provider));

&lt;span class=&quot;hljs-comment&quot;&gt;// secure your route&lt;/span&gt;
router.route(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/secure/resource&quot;&lt;/span&gt;).handler(chain);

&lt;span class=&quot;hljs-comment&quot;&gt;// your app&lt;/span&gt;
router.route(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/secure/resource&quot;&lt;/span&gt;).handler(ctx -&amp;gt; {
  &lt;span class=&quot;hljs-comment&quot;&gt;// do something...&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;finally&quot;&gt;Finally&lt;/h3&gt;
&lt;p&gt;this beta also provides&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vert.x Config stores for Vault and Consul&lt;/li&gt;
&lt;li&gt;Upgrade to Hazelcast 3.8.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;use-it-&quot;&gt;Use it!&lt;/h3&gt;
&lt;p&gt;You can use and consume it in your projects from Maven or Gradle as usual with the version &lt;code&gt;3.5.0.Beta1&lt;/code&gt; or read&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;a href=&quot;http://vertx.io/docs/index-beta.html&quot;&gt;documentation preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;see the &lt;a href=&quot;https://github.com/vert-x3/vertx-examples/tree/3.5.0.beta1&quot;&gt;examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also download various binaries from Maven Central:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1.tar.gz&quot;&gt;base distrib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-full.tar.gz&quot;&gt;full distrib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-docs.zip&quot;&gt;docs zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://search.maven.org/remotecontent?filepath=io/vertx/vertx-stack-manager/3.5.0.Beta1/vertx-stack-manager-3.5.0.Beta1-stack-scala.tar.gz&quot;&gt;scala distrib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;as usual feedback is very important to us and one goal of this beta release is to let the community
provide early feedback!&lt;/p&gt;
&lt;p&gt;The final is expected at the beginning of October.&lt;/p&gt;
&lt;p&gt;Enjoy&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Ian Skerrett: Eclipse IoT in London</title>
	<guid isPermaLink="false">http://ianskerrett.wordpress.com/?p=4183</guid>
	<link>http://feedproxy.google.com/~r/IanSkerrett/~3/41A5UdYGYl0/</link>
	<description>&lt;p&gt;Once again we are hosting an Eclipse IoT Day in London on September 11. Like last year, we are co-locating with the awesome &lt;a href=&quot;http://thingmonk.com/&quot;&gt;Thingmonk &lt;/a&gt;event, one of my favourite IoT events of the year. &lt;a href=&quot;http://thingmonk.com/&quot;&gt;Thingmonk &lt;/a&gt;brings together some of the &lt;a href=&quot;http://thingmonk.com/index.html#speakers&quot;&gt;best thinkers in IoT&lt;/a&gt; so it is always a great chance to learn and network. If you are serious about IoT, you need to attend this event.&lt;/p&gt;
&lt;p&gt;Like last year, we are doing a half-day Eclipse IoT Day as the pre-conference event for Thingmonk. We have put together a pretty awesome set of speakers to showcase what is going on in the Eclipse IoT community. Check out the line-up:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thingmonk.com/eclipse-day-talks.html#icraggs&quot;&gt;Ian Craggs&lt;/a&gt;, from IBM and the Eclipse Paho project, will be laying out the plans to support the new MQTT 5 specification. MQTT 5 is a major up-level of the MQTT spec so the Eclipse Paho plans and this presentation will be relevant for anyone using MQTT.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thingmonk.com/eclipse-day-talks.html#hirschmicha&quot;&gt;Michael Hirsch&lt;/a&gt;, from Bosch and the Eclipse hawkBit project, will cover a topic I think is critical to IoT Security and the general IoT industry: How to do large-scale software updates for IoT devices. If you can’t update a device, it is not going to be secure. Eclipse hawkBit is technology developed internally in Bosch but now open source at Eclipse hawkBit.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thingmonk.com/eclipse-day-talks.html#vrmvrm&quot;&gt;Julien Vermillard&lt;/a&gt;, from Sierra Wireless and Eclipse Leshan project, is going to talk about his experience deploying large scale M2M and IoT solutions. Julien has been in the industry before it was called IoT so he brings lots of experience to the event.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thingmonk.com/eclipse-day-talks.html#tobidi&quot;&gt;Tobiasz Dworak&lt;/a&gt;, from GlobalLogic will share his experience using Eclipse IoT technology to build water management systems. It is great to have hands-on practitioners sharing their experiences.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://thingmonk.com/eclipse-day-talks.html#finistseb&quot;&gt;Sebastien Lembour&lt;/a&gt; was the winner of our Open IoT Challenge. His &lt;a href=&quot;https://medium.com/inmoodforlife&quot;&gt;InTheModeforLife &lt;/a&gt;is a truly inspirational story of using open source technology to manage mood disorders. Sebastien is really using IoT to work on ‘things that matter’. It is a great story.&lt;/p&gt;
&lt;p&gt;Finally, I will be talking about open source and industrial IoT. Smart Manufacturing and Industry 4.0 are huge opportunities for IoT but they have specific requirements. I will talking about how Eclipse IoT technology can be used in industrial IoT setting.&lt;/p&gt;
&lt;p&gt;A big thank you to Red Hat for helping to sponsor the Eclipse IoT Day. Red Hat continues to be a key contributor to the community. They definitely get the importance of open source for the overall IoT industry.&lt;/p&gt;
&lt;p&gt;I hope you will consider attending the Eclipse IoT Day and Thingmonk. It will definitely be worth a trip to London.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/ianskerrett.wordpress.com/4183/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/ianskerrett.wordpress.com/4183/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=ianskerrett.wordpress.com&amp;amp;blog=405862&amp;amp;post=4183&amp;amp;subd=ianskerrett&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/IanSkerrett/~4/41A5UdYGYl0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 08 Aug 2017 19:10:48 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Symmetric Sympathy</title>
	<guid isPermaLink="false">https://medium.com/p/2c59d4541d60</guid>
	<link>https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;I am a software developer. I’ve programmed in around twenty different programming languages since I was eleven years old. I spent the last seven years of the previous century coding in an amazing language called Smalltalk. I have spent the first seventeen years of this century coding primarily in the Java language, which thankfully continues to improve.&lt;/p&gt;&lt;p&gt;Smalltalk is about big dreams. Java is about little realities.&lt;/p&gt;&lt;p&gt;Big dreams inspire great things. Software development today is becoming incredibly complex. There is still a lot we can learn from how to scale to handle that complexity from Smalltalk.&lt;/p&gt;&lt;p&gt;I am a committer for an open source Java Collections framework called &lt;a href=&quot;http://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt; which was inspired by my experiences using Smalltalk back in the 90's. &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; has been evolving for 12+ years. Symmetry drives a lot of the work in Eclipse Collections. I like to say that symmetry is like gravity. When I see missing or dissimilar patterns, I feel the weight of symmetry. It is work that has yet to be done.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What is Symmetry?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Symmetry is the similarity between different things. In a system with good symmetry, you will see the similarities, and where there is not good symmetry, you will discover the differences.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*x7tvAh5_CcaS0TZ1O62sRQ.png&quot; /&gt;Scope of Symmetry in Eclipse Collections&lt;/figure&gt;&lt;p&gt;The picture above represents the combination of features available in Eclipse Collections. We have an API for filtering, which is called &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt;. When there is good symmetry for &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt;, it will be available across all data structures for eager/lazy behavior, serial/parallel execution, readable/mutable/immutable interfaces, object and primitive versions of each container.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*e-ojSJgIpoWCKOE7noQkfQ.png&quot; /&gt;A snapshot of the co-variant forms of the “select” API in the RichIterable hierarchy&lt;/figure&gt;&lt;p&gt;In the picture above, you will see the &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt; API defined across several interfaces in the Eclipse Collections &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/overview-summary.html&quot;&gt;type hierarchy&lt;/a&gt;. On &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt; returns RichIterable. Each subtype of RichIterable defines a covariant override for &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt;. On &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/ListIterable.html&quot;&gt;ListIterable&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt; returns ListIterable. On &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/LazyIterable.html&quot;&gt;LazyIterable&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt; returns LazyIterable. &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/MutableList.html&quot;&gt;MutableList&lt;/a&gt; returns MutableList and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/ImmutableList.html&quot;&gt;ImmutableList&lt;/a&gt; returns ImmutableList, etc.&lt;/p&gt;&lt;p&gt;There are other forms of symmetry as well. For every data structure, there is usually a corresponding &lt;strong&gt;Readable&lt;/strong&gt; (e.g. &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/ListIterable.html&quot;&gt;ListIterable&lt;/a&gt;), &lt;strong&gt;Mutable&lt;/strong&gt; (e.g. MutableList) and &lt;strong&gt;Immutable&lt;/strong&gt; (e.g. ImmutableList) interface. For most types, this will extend across both object and primitive containers (e.g. &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/list/primitive/IntList.html&quot;&gt;IntList&lt;/a&gt;, MutableIntList, ImmutableIntList, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/8.2.0/org/eclipse/collections/api/set/primitive/DoubleSet.html&quot;&gt;DoubleSet&lt;/a&gt;, MutableDoubleSet, ImmutableDoubleSet, etc.).&lt;/p&gt;&lt;p&gt;A large system with good symmetry becomes easier to understand, because you can detect and expect recurring patterns.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Turtles all the way down&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;“One of these things is not like the others…” — Sesame Street&lt;/p&gt;&lt;p&gt;In Smalltalk, everything is an object. It’s “turtles all the way down”. This makes good symmetry easier to achieve. In Java, everything is not an object. Java has eight primitives (boolean, byte, char, double, int, float, long, short). Primitives and objects behave differently. Primitives are the little realities of Java. Achieving good symmetry across objects and primitives in a collections framework is a challenge.&lt;/p&gt;&lt;p&gt;We face this challenge with grit. Eclipse Collections has support for both object and primitive collections. This can have tremendous benefits (efficiency/performance/fluency) and unfortunate costs (effort/time/code size). We fix missing symmetry when we find it, but only when we know there is a use case for it. Code generation helps reduce the amount of human work significantly, but can create a lot of duplicate code if we’re not careful.&lt;/p&gt;&lt;p&gt;If you are programming in Java today, check out &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;. This amazing collections framework makes Java better and more fun to program in. If you start to use it in your projects, you will understand why I have developed a lot of sympathy for symmetry. Symmetry makes learning and using a framework as feature rich and large as Eclipse Collections much easier for developers. In future blogs, I plan to highlight where symmetry is helping to evolve the development of the framework.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“The best way to predict the future is to invent it.” — Alan Kay&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;I still code in Smalltalk when I can find the time. Smalltalk reminds me of how things once were and how they can be again when we learn from the past and share those lessons with others. I am happy knowing that there are developers out there still working hard on keeping the Smalltalk language and community vibrant and growing. If you don’t know or haven’t used Smalltalk in a while and want to see what you are missing, have a look at &lt;a href=&quot;http://pharo.org/&quot;&gt;Pharo Smalltalk&lt;/a&gt; or &lt;a href=&quot;http://object-arts.com/dolphin7.html&quot;&gt;Dolphin Smalltalk&lt;/a&gt;. They are both great open source Smalltalk development environments.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=2c59d4541d60&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 08 Aug 2017 00:07:34 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: Become a Founding Kubernetes Certified Service Provider</title>
	<guid isPermaLink="false">http://aniszczyk.org/?p=4126</guid>
	<link>http://aniszczyk.org/2017/08/07/become-a-founding-kubernetes-certified-service-provider/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In early September, &lt;a href=&quot;https://cncf.io&quot;&gt;CNCF&lt;/a&gt; will be announcing the founding class of Kubernetes Certified Service Providers (KCSPs). If your company provides professional services to support Kubernetes deployments, please consider signing up to become part of the founding class.&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The main benefits of becoming a KCSP are:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Placement in a new section at the top of https://kubernetes.io/partners/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Monthly meetings with cloud native project leaders, TOC members,&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;and representatives from the CNCF Governing Board&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Access to leads from end users looking for support&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Requirements are:&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Three or more engineers who pass the Certified Kubernetes Administrator &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;(CKA) exam&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Demonstrable activity in the Kubernetes community including active &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;contribution&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;A business model to support enterprise end users, including putting &lt;span&gt;engineers at a customer site&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The CKA exam is about to enter early release beta testing prior to the public release in September. It is an online, proctored, performance-based test that requires solving multiple issues from a command line. It takes 3 to 4 hours to complete, and costs $300, though a discount is available for beta testers to $100.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If your company is interested in becoming a KCSP, please do the following 4 things:&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ensure that your company is listed at&lt;/span&gt;&lt;a href=&quot;https://kubernetes.io/partners/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;https://kubernetes.io/partners/&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;and if not (or if the listing should be updated), please do so via the link&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;at the top of that page.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Have 3 or more of your Kubernetes experts sign up for the beta test at:&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSd9-6nL5L3SzWIddCSPoKeuX_Pdq_KHI8C4mQzcUryP-gu0dQ/viewform&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;https://docs.google.com/forms/d/e/1FAIpQLSd9-6nL5L3SzWIddCSPoKeuX_Pdq_KHI8C4mQzcUryP-gu0dQ/viewform&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.Please have them use their company email so we can properly associate&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;them. Within a week, we will send beta test dates, a discount coupon code, &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;and instructions to register and schedule.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Register your interest in becoming a KCSP at this form: &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSfai-zlNuvP-q0fz3jw89v3v4m_wYaF7tOBmNY0WoKsZgeQUQ/viewform&quot;&gt;https://docs.google.com/forms/d/e/1FAIpQLSfai-zlNuvP-q0fz3jw89v3v4m_wYaF7tOBmNY0WoKsZgeQUQ/viewform&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;If you are not already on it, and want to track progress of the &lt;/span&gt;certification program over time, please subscribe to the Kubernetes Certification Working Group list: &lt;span&gt;&lt;a href=&quot;https://lists.cncf.io/mailman/listinfo/cncf-kubernetescertwg.&quot;&gt;https://lists.cncf.io/mailman/listinfo/cncf-kubernetescertwg.&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Questions or issues? Please email&lt;/span&gt;&lt;a href=&quot;https://lists.cncf.io/mailman/listinfo/cncf-toc&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;cncf-kcsp-support at lists.cncf.io&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;</description>
	<pubDate>Mon, 07 Aug 2017 15:40:02 +0000</pubDate>
</item>
<item>
	<title>Tom Schindl: e(fx)clipse 3.0.0 is released</title>
	<guid isPermaLink="false">http://tomsondev.bestsolution.at/?p=5040</guid>
	<link>https://tomsondev.bestsolution.at/2017/08/06/efxclipse-3-0-0-is-released/</link>
	<description>&lt;p&gt;e(fx)clipse has been released on June 6th but because of the high load of JavaFX projects we are working on I did not have time to write the public release announcement.&lt;/p&gt;
&lt;p&gt;In total we have worked on ~100 tickets most of them adding new features. We also moved our dev infrastructure to github.com and while doing that we’ve split the project into 2 repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/efxclipse-rt&quot;&gt;efxclipse-rt&lt;/a&gt;: Contains the runtime library&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/efxclipse-eclipse&quot;&gt;efxclipse-eclipse&lt;/a&gt;: Contains the Eclipse Tooling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We believe that moving to github and the upcoming pure &lt;a href=&quot;https://tomsondev.bestsolution.at/2017/03/05/e4-on-javafx-with-the-bnd-maven-plugin-with-vs-code/&quot;&gt;maven-build-story&lt;/a&gt; we currently work on in an &lt;a href=&quot;https://github.com/eclipse/efxclipse-rt/tree/44-Transform_project_to_a_pure_maven_build&quot;&gt;extra branch&lt;/a&gt; will make it easier for others to consume our libraries in none OSGi/Eclipse/e4-Projects.&lt;/p&gt;
&lt;p&gt;While we are switching our project structure to pure maven you can already consume our libraries from a maven-repository we host ourselves (see &lt;a href=&quot;http://maven.bestsolution.at/&quot; rel=&quot;nofollow&quot;&gt;http://maven.bestsolution.at/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Let’s take a short tour through some of the 3.0 highlights.&lt;/p&gt;
&lt;h2&gt;Support for Java 9&lt;/h2&gt;
&lt;p&gt;3.0 is the first release who is fully compatible with Java9 and JPMS. Historically we used non-public APIs and even used reflection to eg “hack” DnD in TabFolder. All code that would be broken in Java9 has been reworked to run on Java8 and Java9. &lt;/p&gt;
&lt;p&gt;Some of the none public APIs we used in Java8 have been promoted to public API in Java9 and to support both Java 8 and 9 in the same codebase we extracted those into utility class &lt;code&gt;org.eclipse.fx.ui.controls.JavaFXCompatUtil&lt;/code&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;th&gt;Java 8&lt;/th&gt;
&lt;th&gt;Java 9&lt;/th&gt;
&lt;th&gt;JavaFXCompatUtil&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Window#impl_getWindows()&lt;/td&gt;
&lt;td&gt;Window#getWindows()&lt;/td&gt;
&lt;td&gt;getAllWindows()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KeyCode#impl_getChar()&lt;/td&gt;
&lt;td&gt;KeyCode#getChar()&lt;/td&gt;
&lt;td&gt;getChar(KeyCode)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KeyCode#impl_getCode()&lt;/td&gt;
&lt;td&gt;KeyCode#getCode()&lt;/td&gt;
&lt;td&gt;getCode(KeyCode)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Utilities to work with JavaFX Properties&lt;/h2&gt;
&lt;h3&gt;FXBindings&lt;/h3&gt;
&lt;p&gt;JavaFX has a &lt;code&gt;Bindings&lt;/code&gt; class to setup bindings between different &lt;code&gt;Observable&lt;/code&gt;s but we missed some features we frequently need in our application code hence we added an &lt;code&gt;org.eclipse.fx.core.bindings.FXBindings&lt;/code&gt; who eg has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tenaryBinding(ObservableBooleanValue, ObservableValue&amp;lt;T&amp;gt;, ObservableValue&amp;lt;T&amp;gt;) : Binding&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt; allowing you to defined if-else in a JavaFX binding way&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;concat(ObservableList&amp;lt;? extends A&amp;gt;...) : ListBinding&amp;lt;A&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt; to concat the lists to one and keep the target updated when one of the source lists change&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;concat(String, ObservableValue&amp;lt;T&amp;gt;...) : StringBinding&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt; concat the lists and concat the items with the given delimiter and keep the binding updated&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bindContent(List&amp;lt;T&amp;gt;, ObservableList&amp;lt;E&amp;gt;, Function&amp;lt;E, T&amp;gt;) : Subscription&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt; similar to Bindings.bindContent but allows to use a converter function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A very special feature is a &lt;code&gt;BindingStream&lt;/code&gt; you can create with &lt;code&gt;bindStream(ObservableValue&amp;lt;T&amp;gt;)&lt;/code&gt; who is similar to &lt;code&gt;Bindings.select&lt;/code&gt; but is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typesafe&lt;/li&gt;
&lt;li&gt;Provide a Property as the leaf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s look at a concrete example.&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;class Person {
  public ObjectProperty&amp;lt;Address&amp;gt; address();
}

class Address {
  public StringProperty street() { /* ... */ }
}

class UI {

  ObjectProperty&amp;lt;Person&amp;gt; currentPerson = /* ... */;

  TextField street;

  bindUI() {
     street.textProperty().bindBidirectional( 
      FXBindings.bindStream( currentPerson )
        .map( Person::address )
        .collect( 
           FXCollectors.toProperty( Address::street ) 
        )
     );
  }

}
&lt;/pre&gt;
&lt;h2&gt;@ContextValue improvements&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;@ContextValue&lt;/code&gt; is IMHO one of the coolest concepts we introduced in e(fx)clipse to make reuseable components. In 3.0 we added a &lt;code&gt;scope&lt;/code&gt;-Property who allows you to fix a publishing scope. &lt;/p&gt;
&lt;p&gt;As of 3.0 we support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;APPLICATION&lt;/code&gt;: Publish the value in the IEclipseContext of the application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOCAL&lt;/code&gt;: Publish the value in the local IEclipseContext&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DYNAMIC&lt;/code&gt;: Publish the value using IEclipsContext#modify and the application container is responsible to mark the target context&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with &lt;code&gt;DYNAMIC&lt;/code&gt; as the default.&lt;/p&gt;
&lt;h2&gt;ThreadSynchronize improvements&lt;/h2&gt;
&lt;h3&gt;Halt program flow&lt;/h3&gt;
&lt;p&gt;We added a new API to halt the program flow (NOT the event loop) like this:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;ThreadSynchronize t = ...;
TextField username = new TextField();

BlockCondition&amp;lt;String&amp;gt; w = new BlockCondition&amp;lt;&amp;gt;();
username.setOnAction( 
  e -&amp;gt; w.release( username.getText() ) );

System.out.println(t.block( w ));
&lt;/pre&gt;
&lt;h3&gt;Headless implementation&lt;/h3&gt;
&lt;p&gt;We at BestSolution use the MVVM-Pattern for our JavaFX applications and there we fetch data from backend-services in none-ui-threads and so we need to synchronize from a Background- to the UI-thread using ThreadSynchronize. &lt;/p&gt;
&lt;p&gt;While things work perfectly fine in the real application because the JavaFX Framework is up and running things fall apart when you test your &lt;strong&gt;V&lt;/strong&gt;iew&lt;strong&gt;M&lt;/strong&gt;odel in a headless JUnit-Tests. For that purpose there’s now the possibility to create a &lt;code&gt;ThreadSynchronize&lt;/code&gt; instance like this:&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;ThreadSynchronize t = 
  ThreadSynchronize.createBasicThreadSyncronize(
    new EventLoop()
  );
&lt;/pre&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/tomsondev.wordpress.com/5040/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/tomsondev.wordpress.com/5040/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=tomsondev.bestsolution.at&amp;amp;blog=7995503&amp;amp;post=5040&amp;amp;subd=tomsondev&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 06 Aug 2017 20:48:03 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Eclipse Projects: Level Playing Field</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5080</guid>
	<link>https://waynebeaton.wordpress.com/2017/08/02/eclipse-projects-level-playing-field/</link>
	<description>&lt;p&gt;For many open source organisations, &lt;em&gt;open&lt;/em&gt; means the same thing as &lt;em&gt;transparent&lt;/em&gt;: open as in &lt;em&gt;open book&lt;/em&gt;. At the Eclipse Foundation, we regard being &lt;em&gt;transparent&lt;/em&gt; as the practice of making sure that the community can see and understand what the project is doing; and being &lt;em&gt;open&lt;/em&gt; as the act of giving up absolute control and welcoming the community to participate as an equal player on a level playing field (i.e. being &lt;em&gt;open&lt;/em&gt; to participation by the others).&lt;/p&gt;
&lt;div class=&quot;wp-caption alignnone&quot; id=&quot;attachment_5137&quot; style=&quot;width: 1101px;&quot;&gt;&lt;img alt=&quot;Screenshot from 2017-07-31 23-22-35&quot; class=&quot;alignnone size-full wp-image-5137&quot; src=&quot;https://waynebeaton.files.wordpress.com/2017/07/screenshot-from-2017-07-31-23-22-35.png?w=640&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Not really a &lt;em&gt;field&lt;/em&gt;, but this is the closest thing that I have to a picture of field-based sporting event. Ice is about as level as you can get.&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;At the Eclipse Foundation, we take the &lt;em&gt;open&lt;/em&gt; part of &lt;em&gt;open source&lt;/em&gt; very seriously. It’s codified in the Open Source Rules of Engagement found in the &lt;a href=&quot;https://eclipse.org/projects/dev_process/development_process.php&quot;&gt;Eclipse Development Process&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everybody needs to play by the same set of rules. A level playing field doesn’t necessarily mean that a project team needs to accept every single contribution that comes their way. Rather, it means that the project team needs to have a set of rules by which &lt;em&gt;everybody&lt;/em&gt; participates; and these rules can’t include things like for whom the contributor works.&lt;/p&gt;
&lt;p&gt;Contribution rules can require that contributions fall within the project’s scope and current release plan. The rules can require that all code contributions be accompanied by unit tests and documentation; or that contributions implement a solution for an issue that’s been discussed by the project team in their issue tracker. Some sort of quality bar is a reasonable part of any set of contribution rules.&lt;/p&gt;
&lt;p&gt;For most open source projects, these contribution rules aren’t formally captured. However, most of the rules that I’ve listed so far collectively form a pretty reasonable default set of participation rules. A quality bar is (obviously) hard to quantify, but for many project teams it’s enough that any committer feels that the contribution should be accepted (some projects require that two committers &lt;em&gt;sign off&lt;/em&gt; on a contribution before it can be accepted).&lt;/p&gt;
&lt;p&gt;Note that it’s also perfectly reasonable for a project team to require that significant contributions come with a promise of continued investment in the form of the contributor becoming a member of the project team.&lt;/p&gt;
&lt;p&gt;Regardless of the rules that define the level playing field for any particular project, any content destined for the project’s code base should have some &lt;em&gt;public record of contribution&lt;/em&gt;. Otherwise, the project would be operating (at least in part) hidden from community involvement and so counter to the open source rules of engagement. That public record can take the form of a Gerrit review, GitHub pull request, or (if you’re in a pinch) an attachment on a Bugzilla or GitHub Issue record.&lt;/p&gt;
&lt;p&gt;Regardless of how a contribution is presented, the contributor must be listed as the author in the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#resources-commit&quot;&gt;Git commit record&lt;/a&gt; and must complete the &lt;a href=&quot;https://www.eclipse.org/legal/ECA.php&quot;&gt;Eclipse Contributor Agreement&lt;/a&gt; before any contribution can be accepted.&lt;/p&gt;
&lt;p&gt;The best way to get involved with an open source project is connect with the project team. All Eclipse project repositories should have a contribution guide in the root of every Git repository with this contact information and more. You can also search for project information on the &lt;a href=&quot;https://projects.eclipse.org/&quot;&gt;Eclipse Projects website&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/waynebeaton.wordpress.com/5080/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/waynebeaton.wordpress.com/5080/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=waynebeaton.wordpress.com&amp;amp;blog=19425814&amp;amp;post=5080&amp;amp;subd=waynebeaton&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 02 Aug 2017 14:36:10 +0000</pubDate>
</item>
<item>
	<title>Kichwa Coders: GDB’s MI is not a Debug Protocol</title>
	<guid isPermaLink="false">http://kichwacoders.com/?p=2664</guid>
	<link>https://kichwacoders.com/2017/08/02/gdbs-mi-is-not-a-debug-protocol/</link>
	<description>&lt;p&gt;While looking to &lt;a href=&quot;https://kichwacoders.com/2017/07/28/what-about-a-common-debug-protocol/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the future of debugger tooling&lt;/a&gt;, it is still important to consider the prior art and the solutions that have stood the test of time. For embedded development, &lt;a href=&quot;https://www.gnu.org/software/gdb/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;gdb&lt;/a&gt; is high on that list, so it is worth considering if gdb’s interface could be the basis of a debug protocol.&lt;/p&gt;
&lt;p&gt;If you’ve used gdb to debug C/C++ code then you are probably aware of MI, the machine interface layer used to communicate between the debugger backend and the IDE front end. MI is not only used by gdb but also adopted by lldb (the defacto &lt;a href=&quot;https://www.natashatherobot.com/swift-debugging/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;debu&lt;/a&gt;&lt;a href=&quot;https://www.natashatherobot.com/swift-debugging/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;gger for Swift&lt;/a&gt;) and more recently by &lt;a href=&quot;https://github.com/Microsoft/MIEngine/wiki/What-is-CLRDBG&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;clrdbg&lt;/a&gt; (.NET Core). MI defines a rich set of functionality from standard debug run control and breakpoints up to advanced features for multi-process debug, reverse debugging and dynamic printf. With MI being pretty pervasive and supporting such rich functionality, it is tempting to think it might make the basis of a good debug protocol.  However in practice it lacks some of the qualities of a good protocol:&lt;/p&gt;
&lt;h3&gt;1. A Specification&lt;/h3&gt;
&lt;p&gt;We once had the opportunity to work on a project where the brief was to integrate into Eclipse IDE/CDT a custom debugger that ‘implemented the MI spec’. We can tell you we learnt the hard way that MI has plenty of &lt;a href=&quot;https://sourceware.org/gdb/onlinedocs/gdb/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;useful documentation&lt;/a&gt; but no spec to speak of. This matters when you get into the nitty gritty of implementation details for example: what syntax should be used to notify when a bad condition has been created on a breakpoint?&lt;/p&gt;
&lt;p&gt;The documentation does not necessarily reflect what the code does, some command or command variants have inconsistencies with the source code or don’t reflect platform dependent issues. For example, the &lt;a href=&quot;https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI-Program-Execution.html#GDB_002fMI-Program-Execution&quot;&gt;-exec-step-instruction&lt;/a&gt; in practice takes an argument (e.g -exec-step-instruction 1)  even though this is not documented.&lt;/p&gt;
&lt;p&gt;The main message here is documentation, even good documentation as in the case of gdb, is not the same as a protocol specification, so one can’t blindly implement to the docs (and if you think it’s just a case of looking at the code… well, which version?- see #4 below).&lt;/p&gt;
&lt;h3&gt;2. Clean Interfaces with no Idiosyncrasies&lt;/h3&gt;
&lt;p&gt;This &lt;a href=&quot;https://github.com/Microsoft/MIEngine/blob/90ef84f438940a0abf1fe6123d5264bb6b75704f/src/MICore/Transports/LocalTransport.cs&quot;&gt;piece of code&lt;/a&gt; from Visual Studio’s MIEngine demonstrates how rife MI is with idiosyncrasies. The code launches a debugger which will use MI to communicate i.e. to gdb, lldb or clrdbg. There are special cases for each tool that an IDE just shouldn’t need to know about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Different ways of specifying a working directory depending on the tool&lt;/li&gt;
&lt;li&gt;Environment variables are set differently: before launch for gdb/lldb after for clrdbg&lt;/li&gt;
&lt;li&gt;Details of which Operating System the debugger is being run on&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;miengine&quot; class=&quot;alignnone size-full wp-image-2746&quot; src=&quot;https://kichwacoders.files.wordpress.com/2017/07/miengine.png?w=525&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And this is even before you launch MI. In Eclipse CDT just after launching MI, the IDE has to know about and issue commands about all sorts of things e.g. ‘set print sevenbit-strings on’ c’mon, really, seriously?  Tom &lt;a href=&quot;https://sourceware.org/ml/gdb/2010-08/msg00129.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;sums it up nicely&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“&lt;em&gt;It is an oddity that currently an MI consumer must check gdb’s host charset in order to know how to decode its output.&lt;/em&gt;“&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Once you get into actual debugging there’s a fair amount of ‘need-to-know’ for special cases &amp;amp; exceptions. A protocol needs to steer-clear of implementation details, but in the case of MI these have all too often leaked in.&lt;/p&gt;
&lt;h3&gt;3. Fit for Purpose&lt;/h3&gt;
&lt;p&gt;As MI was not specifically designed to be a protocol,  not suprisingly there are a few behaviour specific things that make it not fit to be a protocol. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your program prints to stdout, then that can corrupt the output stream of MI, breaking the instructions.&lt;/li&gt;
&lt;li&gt;In some cases GDB responds twice from a single command. In such cases, for example Eclipse CDT has a special &lt;a href=&quot;https://git.eclipse.org/r/#/c/85888/5/dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/MIAsyncErrorProcessor.java,unified&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;MIAsyncErrorProcessor&lt;/a&gt; class just to manage such cases.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. Versioning&lt;/h3&gt;
&lt;p&gt;A good protocol has defined versions that clients and subscribers can adapt to.  With each new version of GDB,  MI has subtle differences that make client implementation long-winded and difficult to maintain. For example, in Eclipse CDT’s gdb debugger implementation (DSF) separate classes are created to manage differences in MI in different versions of gdb.  There are 5 different breakpoint classes, 7 different run control classes, etc And this is just gdb versions, let alone lldb or clrdb – imagine trying to implement wide-scale support for all those in a new IDE!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;debug_versions&quot; class=&quot;alignnone size-full wp-image-2731&quot; src=&quot;https://kichwacoders.files.wordpress.com/2017/07/debug_versions.jpg?w=525&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While feature-rich and ubiquitous, gdb’s MI is a reasonable syntax, but not a good debug protocol.  A good protocol needs much more than that – clean interfaces, fit for purpose, a spec &amp;amp; versioning – if it is really going to make common debugger implementations easier.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kichwacoders.wordpress.com/2664/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kichwacoders.wordpress.com/2664/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kichwacoders.com&amp;amp;blog=68353182&amp;amp;post=2664&amp;amp;subd=kichwacoders&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 02 Aug 2017 09:13:03 +0000</pubDate>
</item>

</channel>
</rss>
